

HI-TECH Software PIC PRO Macro Assembler V9.80 build 6738 
                                                                                               Wed Nov 11 22:02:23 2015

HI-TECH Software Omniscient Code Generator (PRO mode) build 6738
     1                           	processor	16F1934
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBIGRAM,global,class=CODE,delta=2
     7                           	psect	idataBANK1,global,class=CODE,delta=2
     8                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,delta=2
    10                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text665,local,class=CODE,delta=2
    21                           	psect	text668,local,class=CODE,delta=2
    22                           	psect	text669,local,class=CODE,delta=2
    23                           	psect	pa_nodes,global,class=CODE,delta=2
    24                           	dabs	1,0x120,80
    25                           	dabs	1,0xE8,8
    26                           	dabs	1,0x7E,2
    27  000A                     	;#
    28                           
    29                           	psect	config
    30  8007  061C               	dw	1564	;#
    31  8008  0233               	dw	563	;_ParamConfig
    32                           
    33                           	psect	idataBANK0
    34  0412                     __pidataBANK0:	
    35                           
    36                           ;initializer for _KeyEvent_PendKeyCode
    37  0412  3401               	retlw	1
    38                           
    39                           ;initializer for _Battery_12V
    40  0413  3400               	retlw	0
    41  0414  3401               	retlw	1
    42  0415  342F               	retlw	47
    43  0416  3401               	retlw	1
    44  0417  341C               	retlw	28
    45  0418  3401               	retlw	1
    46  0419  3439               	retlw	57
    47  041A  3401               	retlw	1
    48  041B  3487               	retlw	135
    49  041C  3401               	retlw	1
    50  041D  3463               	retlw	99
    51  041E  3401               	retlw	1
    52  041F  345F               	retlw	95
    53  0420  3401               	retlw	1
    54  0421  3455               	retlw	85
    55  0422  3401               	retlw	1
    56  0423  3447               	retlw	71
    57  0424  3401               	retlw	1
    58  0425  347D               	retlw	125
    59  0426  340F               	retlw	15
    60  0427  3484               	retlw	132
    61  0428  3403               	retlw	3
    62                           
    63                           	psect	idataBIGRAM
    64  0384                     __pidataBIGRAM:	
    65                           
    66                           ;initializer for _ParamConfig
    67  0384  3400               	retlw	0
    68  0385  3400               	retlw	0
    69  0386  3400               	retlw	0
    70  0387  3400               	retlw	0
    71  0388  3400               	retlw	0
    72  0389  3400               	retlw	0
    73  038A  3400               	retlw	0
    74  038B  3400               	retlw	0
    75  038C  3400               	retlw	0
    76  038D  3400               	retlw	0
    77  038E  3400               	retlw	0
    78  038F  3400               	retlw	0
    79  0390  3400               	retlw	0
    80  0391  3400               	retlw	0
    81  0392  3400               	retlw	0
    82  0393  3400               	retlw	0
    83  0394  3400               	retlw	0
    84  0395  3400               	retlw	0
    85  0396  3400               	retlw	0
    86  0397  3400               	retlw	0
    87  0398  3400               	retlw	0
    88  0399  3400               	retlw	0
    89  039A  3401               	retlw	1
    90  039B  3400               	retlw	0
    91  039C  3400               	retlw	0
    92  039D  3400               	retlw	0
    93  039E  3400               	retlw	0
    94  039F  3400               	retlw	0
    95  03A0  3400               	retlw	0
    96  03A1  3400               	retlw	0
    97  03A2  3400               	retlw	0
    98  03A3  3400               	retlw	0
    99  03A4  3400               	retlw	0
   100  03A5  3400               	retlw	0
   101  03A6  3400               	retlw	0
   102  03A7  3400               	retlw	0
   103  03A8  3400               	retlw	0
   104  03A9  3400               	retlw	0
   105  03AA  3400               	retlw	0
   106  03AB  3400               	retlw	0
   107  03AC  3400               	retlw	0
   108  03AD  3400               	retlw	0
   109  03AE  3400               	retlw	0
   110  03AF  3400               	retlw	0
   111  03B0  3402               	retlw	2
   112  03B1  3400               	retlw	0
   113  03B2  3400               	retlw	0
   114  03B3  3400               	retlw	0
   115  03B4  3400               	retlw	0
   116  03B5  3400               	retlw	0
   117  03B6  3400               	retlw	0
   118  03B7  3400               	retlw	0
   119  03B8  3400               	retlw	0
   120  03B9  3400               	retlw	0
   121  03BA  3400               	retlw	0
   122  03BB  3400               	retlw	0
   123  03BC  3400               	retlw	0
   124  03BD  3400               	retlw	0
   125  03BE  3400               	retlw	0
   126  03BF  3400               	retlw	0
   127  03C0  3400               	retlw	0
   128  03C1  3400               	retlw	0
   129  03C2  3400               	retlw	0
   130  03C3  3400               	retlw	0
   131  03C4  3400               	retlw	0
   132  03C5  3400               	retlw	0
   133  03C6  3403               	retlw	3
   134  03C7  3400               	retlw	0
   135  03C8  3400               	retlw	0
   136  03C9  3400               	retlw	0
   137  03CA  3400               	retlw	0
   138  03CB  3400               	retlw	0
   139  03CC  3400               	retlw	0
   140  03CD  3400               	retlw	0
   141  03CE  3400               	retlw	0
   142  03CF  3400               	retlw	0
   143  03D0  3400               	retlw	0
   144  03D1  3400               	retlw	0
   145  03D2  3400               	retlw	0
   146  03D3  3400               	retlw	0
   147  03D4  3400               	retlw	0
   148  03D5  3400               	retlw	0
   149  03D6  3400               	retlw	0
   150  03D7  3400               	retlw	0
   151  03D8  3400               	retlw	0
   152  03D9  3400               	retlw	0
   153  03DA  3400               	retlw	0
   154  03DB  3400               	retlw	0
   155                           
   156                           	psect	idataBANK1
   157  0429                     __pidataBANK1:	
   158                           
   159                           ;initializer for _Battery_24V
   160  0429  3400               	retlw	0
   161  042A  3402               	retlw	2
   162  042B  345E               	retlw	94
   163  042C  3402               	retlw	2
   164  042D  3438               	retlw	56
   165  042E  3402               	retlw	2
   166  042F  3472               	retlw	114
   167  0430  3402               	retlw	2
   168  0431  340E               	retlw	14
   169  0432  3403               	retlw	3
   170  0433  34C6               	retlw	198
   171  0434  3402               	retlw	2
   172  0435  34BE               	retlw	190
   173  0436  3402               	retlw	2
   174  0437  34AA               	retlw	170
   175  0438  3402               	retlw	2
   176  0439  348E               	retlw	142
   177  043A  3402               	retlw	2
   178  043B  3427               	retlw	39
   179  043C  3420               	retlw	32
   180  043D  3405               	retlw	5
   181  043E  340D               	retlw	13
   182                           
   183                           	psect	stringtext
   184  0500                     __pstringtext:	
   185  0500                     __stringtab:	
   186  0500  3400               	retlw	0
   187  0501                     _dpowers:	
   188  0501  3401               	retlw	1
   189  0502  3400               	retlw	0
   190  0503  3400               	retlw	0
   191  0504  3400               	retlw	0
   192  0505  340A               	retlw	10
   193  0506  3400               	retlw	0
   194  0507  3400               	retlw	0
   195  0508  3400               	retlw	0
   196  0509  3464               	retlw	100
   197  050A  3400               	retlw	0
   198  050B  3400               	retlw	0
   199  050C  3400               	retlw	0
   200  050D  34E8               	retlw	232
   201  050E  3403               	retlw	3
   202  050F  3400               	retlw	0
   203  0510  3400               	retlw	0
   204  0511  3410               	retlw	16
   205  0512  3427               	retlw	39
   206  0513  3400               	retlw	0
   207  0514  3400               	retlw	0
   208  0515  34A0               	retlw	160
   209  0516  3486               	retlw	134
   210  0517  3401               	retlw	1
   211  0518  3400               	retlw	0
   212  0519  3440               	retlw	64
   213  051A  3442               	retlw	66
   214  051B  340F               	retlw	15
   215  051C  3400               	retlw	0
   216  051D  3480               	retlw	128
   217  051E  3496               	retlw	150
   218  051F  3498               	retlw	152
   219  0520  3400               	retlw	0
   220  0521  3400               	retlw	0
   221  0522  34E1               	retlw	225
   222  0523  34F5               	retlw	245
   223  0524  3405               	retlw	5
   224  0525  3400               	retlw	0
   225  0526  34CA               	retlw	202
   226  0527  349A               	retlw	154
   227  0528  343B               	retlw	59
   228  000C                     _PORTA	set	12
   229  000D                     _PORTB	set	13
   230  000F                     _PORTD	set	15
   231  0010                     _PORTE	set	16
   232  001B                     _PR2	set	27
   233  0018                     _T1CON	set	24
   234  001C                     _T2CON	set	28
   235  0017                     _TMR1H	set	23
   236  0016                     _TMR1L	set	22
   237  005F                     _GIE	set	95
   238  005E                     _PEIE	set	94
   239  006B                     _RB3	set	107
   240  006C                     _RB4	set	108
   241  006D                     _RB5	set	109
   242  0071                     _RC1	set	113
   243  0072                     _RC2	set	114
   244  0073                     _RC3	set	115
   245  0082                     _RE2	set	130
   246  005D                     _TMR0IE	set	93
   247  0088                     _TMR1IF	set	136
   248  0089                     _TMR2IF	set	137
   249  0099                     _TMR4IF	set	153
   250  009B                     _TMR6IF	set	155
   251  0099                     _OSCCON	set	153
   252  008C                     _TRISA	set	140
   253  008D                     _TRISB	set	141
   254  008E                     _TRISC	set	142
   255  008F                     _TRISD	set	143
   256  0090                     _TRISE	set	144
   257  0097                     _WDTCON	set	151
   258  0488                     _TMR1IE	set	1160
   259  0489                     _TMR2IE	set	1161
   260  0499                     _TMR4IE	set	1177
   261  010E                     _LATC	set	270
   262  018C                     _ANSELA	set	396
   263  018D                     _ANSELB	set	397
   264  0190                     _ANSELE	set	400
   265  0191                     _EEADRL	set	401
   266  0196                     _EECON2	set	406
   267  0193                     _EEDATL	set	403
   268  0CAE                     _CFGS	set	3246
   269  0CAF                     _EEPGD	set	3247
   270  0CA8                     _RD	set	3240
   271  0CA9                     _WR	set	3241
   272  0CAA                     _WREN	set	3242
   273  0395                     _IOCBN	set	917
   274  0394                     _IOCBP	set	916
   275  1CB3                     _IOCBF3	set	7347
   276  1CB4                     _IOCBF4	set	7348
   277  1CB5                     _IOCBF5	set	7349
   278  0416                     _PR4	set	1046
   279  0417                     _T4CON	set	1047
   280  0529                     STR_8:	
   281  0529  3454               	retlw	84	;'T'
   282  052A  3449               	retlw	73	;'I'
   283  052B  344D               	retlw	77	;'M'
   284  052C  3445               	retlw	69	;'E'
   285  052D  343A               	retlw	58	;':'
   286  052E  3420               	retlw	32	;' '
   287  052F  3420               	retlw	32	;' '
   288  0530  3420               	retlw	32	;' '
   289  0531  3420               	retlw	32	;' '
   290  0532  3420               	retlw	32	;' '
   291  0533  3425               	retlw	37	;'%'
   292  0534  3430               	retlw	48	;'0'
   293  0535  3433               	retlw	51	;'3'
   294  0536  342E               	retlw	46	;'.'
   295  0537  3430               	retlw	48	;'0'
   296  0538  3431               	retlw	49	;'1'
   297  0539  3466               	retlw	102	;'f'
   298  053A  3456               	retlw	86	;'V'
   299  053B  3400               	retlw	0
   300  053C                     STR_10:	
   301  053C  3452               	retlw	82	;'R'
   302  053D  3445               	retlw	69	;'E'
   303  053E  3420               	retlw	32	;' '
   304  053F  3455               	retlw	85	;'U'
   305  0540  344E               	retlw	78	;'N'
   306  0541  3444               	retlw	68	;'D'
   307  0542  3445               	retlw	69	;'E'
   308  0543  3452               	retlw	82	;'R'
   309  0544  3420               	retlw	32	;' '
   310  0545  343A               	retlw	58	;':'
   311  0546  3425               	retlw	37	;'%'
   312  0547  3430               	retlw	48	;'0'
   313  0548  3433               	retlw	51	;'3'
   314  0549  342E               	retlw	46	;'.'
   315  054A  3430               	retlw	48	;'0'
   316  054B  3431               	retlw	49	;'1'
   317  054C  3466               	retlw	102	;'f'
   318  054D  3456               	retlw	86	;'V'
   319  054E  3400               	retlw	0
   320  054F                     STR_13:	
   321  054F  3444               	retlw	68	;'D'
   322  0550  3441               	retlw	65	;'A'
   323  0551  3459               	retlw	89	;'Y'
   324  0552  3420               	retlw	32	;' '
   325  0553  3420               	retlw	32	;' '
   326  0554  3420               	retlw	32	;' '
   327  0555  3456               	retlw	86	;'V'
   328  0556  344F               	retlw	79	;'O'
   329  0557  344C               	retlw	76	;'L'
   330  0558  343A               	retlw	58	;':'
   331  0559  3425               	retlw	37	;'%'
   332  055A  3430               	retlw	48	;'0'
   333  055B  3433               	retlw	51	;'3'
   334  055C  342E               	retlw	46	;'.'
   335  055D  3430               	retlw	48	;'0'
   336  055E  3431               	retlw	49	;'1'
   337  055F  3466               	retlw	102	;'f'
   338  0560  3456               	retlw	86	;'V'
   339  0561  3400               	retlw	0
   340  0562                     STR_11:	
   341  0562  3456               	retlw	86	;'V'
   342  0563  344F               	retlw	79	;'O'
   343  0564  3445               	retlw	69	;'E'
   344  0565  3452               	retlw	82	;'R'
   345  0566  3420               	retlw	32	;' '
   346  0567  3420               	retlw	32	;' '
   347  0568  3456               	retlw	86	;'V'
   348  0569  344F               	retlw	79	;'O'
   349  056A  344C               	retlw	76	;'L'
   350  056B  343A               	retlw	58	;':'
   351  056C  3425               	retlw	37	;'%'
   352  056D  3430               	retlw	48	;'0'
   353  056E  3433               	retlw	51	;'3'
   354  056F  342E               	retlw	46	;'.'
   355  0570  3430               	retlw	48	;'0'
   356  0571  3431               	retlw	49	;'1'
   357  0572  3466               	retlw	102	;'f'
   358  0573  3456               	retlw	86	;'V'
   359  0574  3400               	retlw	0
   360  0575                     STR_9:	
   361  0575  3455               	retlw	85	;'U'
   362  0576  344E               	retlw	78	;'N'
   363  0577  3444               	retlw	68	;'D'
   364  0578  3445               	retlw	69	;'E'
   365  0579  3452               	retlw	82	;'R'
   366  057A  3420               	retlw	32	;' '
   367  057B  3456               	retlw	86	;'V'
   368  057C  344F               	retlw	79	;'O'
   369  057D  344C               	retlw	76	;'L'
   370  057E  343A               	retlw	58	;':'
   371  057F  3425               	retlw	37	;'%'
   372  0580  3430               	retlw	48	;'0'
   373  0581  3433               	retlw	51	;'3'
   374  0582  342E               	retlw	46	;'.'
   375  0583  3430               	retlw	48	;'0'
   376  0584  3431               	retlw	49	;'1'
   377  0585  3466               	retlw	102	;'f'
   378  0586  3456               	retlw	86	;'V'
   379  0587  3400               	retlw	0
   380  0588                     STR_14:	
   381  0588  344E               	retlw	78	;'N'
   382  0589  3449               	retlw	73	;'I'
   383  058A  3447               	retlw	71	;'G'
   384  058B  3448               	retlw	72	;'H'
   385  058C  3454               	retlw	84	;'T'
   386  058D  3420               	retlw	32	;' '
   387  058E  3456               	retlw	86	;'V'
   388  058F  344F               	retlw	79	;'O'
   389  0590  344C               	retlw	76	;'L'
   390  0591  343A               	retlw	58	;':'
   391  0592  3425               	retlw	37	;'%'
   392  0593  3430               	retlw	48	;'0'
   393  0594  3433               	retlw	51	;'3'
   394  0595  342E               	retlw	46	;'.'
   395  0596  3430               	retlw	48	;'0'
   396  0597  3431               	retlw	49	;'1'
   397  0598  3466               	retlw	102	;'f'
   398  0599  3456               	retlw	86	;'V'
   399  059A  3400               	retlw	0
   400  059B                     STR_12:	
   401  059B  3452               	retlw	82	;'R'
   402  059C  3445               	retlw	69	;'E'
   403  059D  3420               	retlw	32	;' '
   404  059E  3420               	retlw	32	;' '
   405  059F  3420               	retlw	32	;' '
   406  05A0  344F               	retlw	79	;'O'
   407  05A1  3456               	retlw	86	;'V'
   408  05A2  3445               	retlw	69	;'E'
   409  05A3  3452               	retlw	82	;'R'
   410  05A4  343A               	retlw	58	;':'
   411  05A5  3425               	retlw	37	;'%'
   412  05A6  3430               	retlw	48	;'0'
   413  05A7  3433               	retlw	51	;'3'
   414  05A8  342E               	retlw	46	;'.'
   415  05A9  3430               	retlw	48	;'0'
   416  05AA  3431               	retlw	49	;'1'
   417  05AB  3466               	retlw	102	;'f'
   418  05AC  3456               	retlw	86	;'V'
   419  05AD  3400               	retlw	0
   420  05AE                     STR_7:	
   421  05AE  3446               	retlw	70	;'F'
   422  05AF  346C               	retlw	108	;'l'
   423  05B0  345F               	retlw	95	;'_'
   424  05B1  3443               	retlw	67	;'C'
   425  05B2  3468               	retlw	104	;'h'
   426  05B3  3461               	retlw	97	;'a'
   427  05B4  3472               	retlw	114	;'r'
   428  05B5  3467               	retlw	103	;'g'
   429  05B6  3465               	retlw	101	;'e'
   430  05B7  343A               	retlw	58	;':'
   431  05B8  3425               	retlw	37	;'%'
   432  05B9  3430               	retlw	48	;'0'
   433  05BA  3433               	retlw	51	;'3'
   434  05BB  342E               	retlw	46	;'.'
   435  05BC  3430               	retlw	48	;'0'
   436  05BD  3431               	retlw	49	;'1'
   437  05BE  3466               	retlw	102	;'f'
   438  05BF  3456               	retlw	86	;'V'
   439  05C0  3400               	retlw	0
   440  05C1                     STR_5:	
   441  05C1  3445               	retlw	69	;'E'
   442  05C2  346E               	retlw	110	;'n'
   443  05C3  345F               	retlw	95	;'_'
   444  05C4  3443               	retlw	67	;'C'
   445  05C5  3468               	retlw	104	;'h'
   446  05C6  3461               	retlw	97	;'a'
   447  05C7  3472               	retlw	114	;'r'
   448  05C8  3467               	retlw	103	;'g'
   449  05C9  3465               	retlw	101	;'e'
   450  05CA  343A               	retlw	58	;':'
   451  05CB  3425               	retlw	37	;'%'
   452  05CC  3430               	retlw	48	;'0'
   453  05CD  3433               	retlw	51	;'3'
   454  05CE  342E               	retlw	46	;'.'
   455  05CF  3430               	retlw	48	;'0'
   456  05D0  3431               	retlw	49	;'1'
   457  05D1  3466               	retlw	102	;'f'
   458  05D2  3456               	retlw	86	;'V'
   459  05D3  3400               	retlw	0
   460  05D4                     STR_6:	
   461  05D4  3445               	retlw	69	;'E'
   462  05D5  3471               	retlw	113	;'q'
   463  05D6  345F               	retlw	95	;'_'
   464  05D7  3443               	retlw	67	;'C'
   465  05D8  3468               	retlw	104	;'h'
   466  05D9  3461               	retlw	97	;'a'
   467  05DA  3472               	retlw	114	;'r'
   468  05DB  3467               	retlw	103	;'g'
   469  05DC  3465               	retlw	101	;'e'
   470  05DD  343A               	retlw	58	;':'
   471  05DE  3425               	retlw	37	;'%'
   472  05DF  3430               	retlw	48	;'0'
   473  05E0  3433               	retlw	51	;'3'
   474  05E1  342E               	retlw	46	;'.'
   475  05E2  3430               	retlw	48	;'0'
   476  05E3  3431               	retlw	49	;'1'
   477  05E4  3466               	retlw	102	;'f'
   478  05E5  3456               	retlw	86	;'V'
   479  05E6  3400               	retlw	0
   480  05E7                     STR_15:	
   481  05E7  3442               	retlw	66	;'B'
   482  05E8  3476               	retlw	118	;'v'
   483  05E9  3431               	retlw	49	;'1'
   484  05EA  3433               	retlw	51	;'3'
   485  05EB  342E               	retlw	46	;'.'
   486  05EC  3433               	retlw	51	;'3'
   487  05ED  3456               	retlw	86	;'V'
   488  05EE  3420               	retlw	32	;' '
   489  05EF  3453               	retlw	83	;'S'
   490  05F0  346F               	retlw	111	;'o'
   491  05F1  3463               	retlw	99	;'c'
   492  05F2  3430               	retlw	48	;'0'
   493  05F3  3430               	retlw	48	;'0'
   494  05F4  3430               	retlw	48	;'0'
   495  05F5  3430               	retlw	48	;'0'
   496  05F6  3400               	retlw	0
   497  05F7                     STR_16:	
   498  05F7  3449               	retlw	73	;'I'
   499  05F8  3463               	retlw	99	;'c'
   500  05F9  3431               	retlw	49	;'1'
   501  05FA  3435               	retlw	53	;'5'
   502  05FB  342E               	retlw	46	;'.'
   503  05FC  3433               	retlw	51	;'3'
   504  05FD  3441               	retlw	65	;'A'
   505  05FE  3420               	retlw	32	;' '
   506  05FF  3449               	retlw	73	;'I'
   507  0600  346F               	retlw	111	;'o'
   508  0601  3431               	retlw	49	;'1'
   509  0602  3438               	retlw	56	;'8'
   510  0603  342E               	retlw	46	;'.'
   511  0604  3438               	retlw	56	;'8'
   512  0605  3441               	retlw	65	;'A'
   513  0606  3400               	retlw	0
   514  0607                     STR_18:	
   515  0607  3453               	retlw	83	;'S'
   516  0608  3445               	retlw	69	;'E'
   517  0609  3454               	retlw	84	;'T'
   518  060A  3454               	retlw	84	;'T'
   519  060B  3449               	retlw	73	;'I'
   520  060C  344E               	retlw	78	;'N'
   521  060D  3447               	retlw	71	;'G'
   522  060E  3420               	retlw	32	;' '
   523  060F  3455               	retlw	85	;'U'
   524  0610  3450               	retlw	80	;'P'
   525  0611  3420               	retlw	32	;' '
   526  0612  3444               	retlw	68	;'D'
   527  0613  344F               	retlw	79	;'O'
   528  0614  3457               	retlw	87	;'W'
   529  0615  344E               	retlw	78	;'N'
   530  0616  3400               	retlw	0
   531  0617                     STR_4:	
   532  0617  3453               	retlw	83	;'S'
   533  0618  3465               	retlw	101	;'e'
   534  0619  346C               	retlw	108	;'l'
   535  061A  3466               	retlw	102	;'f'
   536  061B  3420               	retlw	32	;' '
   537  061C  3473               	retlw	115	;'s'
   538  061D  3465               	retlw	101	;'e'
   539  061E  3474               	retlw	116	;'t'
   540  061F  3474               	retlw	116	;'t'
   541  0620  3469               	retlw	105	;'i'
   542  0621  346E               	retlw	110	;'n'
   543  0622  3467               	retlw	103	;'g'
   544  0623  3473               	retlw	115	;'s'
   545  0624  3400               	retlw	0
   546  0625                     STR_1:	
   547  0625  344C               	retlw	76	;'L'
   548  0626  3465               	retlw	101	;'e'
   549  0627  3461               	retlw	97	;'a'
   550  0628  3464               	retlw	100	;'d'
   551  0629  342D               	retlw	45	;'-'
   552  062A  3461               	retlw	97	;'a'
   553  062B  3463               	retlw	99	;'c'
   554  062C  3469               	retlw	105	;'i'
   555  062D  3464               	retlw	100	;'d'
   556  062E  3420               	retlw	32	;' '
   557  062F  3442               	retlw	66	;'B'
   558  0630  3461               	retlw	97	;'a'
   559  0631  3474               	retlw	116	;'t'
   560  0632  3400               	retlw	0
   561  0633                     STR_17:	
   562  0633  3442               	retlw	66	;'B'
   563  0634  3461               	retlw	97	;'a'
   564  0635  3474               	retlw	116	;'t'
   565  0636  3474               	retlw	116	;'t'
   566  0637  3465               	retlw	101	;'e'
   567  0638  3472               	retlw	114	;'r'
   568  0639  3479               	retlw	121	;'y'
   569  063A  3420               	retlw	32	;' '
   570  063B  3454               	retlw	84	;'T'
   571  063C  3479               	retlw	121	;'y'
   572  063D  3470               	retlw	112	;'p'
   573  063E  3465               	retlw	101	;'e'
   574  063F  3400               	retlw	0
   575  0640                     STR_2:	
   576  0640  3447               	retlw	71	;'G'
   577  0641  3465               	retlw	101	;'e'
   578  0642  346C               	retlw	108	;'l'
   579  0643  3420               	retlw	32	;' '
   580  0644  3462               	retlw	98	;'b'
   581  0645  3461               	retlw	97	;'a'
   582  0646  3474               	retlw	116	;'t'
   583  0647  3474               	retlw	116	;'t'
   584  0648  3465               	retlw	101	;'e'
   585  0649  3472               	retlw	114	;'r'
   586  064A  3479               	retlw	121	;'y'
   587  064B  3400               	retlw	0
   588  064C                     STR_3:	
   589  064C  344F               	retlw	79	;'O'
   590  064D  3470               	retlw	112	;'p'
   591  064E  3465               	retlw	101	;'e'
   592  064F  346E               	retlw	110	;'n'
   593  0650  3420               	retlw	32	;' '
   594  0651  3463               	retlw	99	;'c'
   595  0652  3465               	retlw	101	;'e'
   596  0653  346C               	retlw	108	;'l'
   597  0654  346C               	retlw	108	;'l'
   598  0655  3400               	retlw	0
   599                           
   600                           	psect	cinit
   601  005C                     start_initialization:	
   602  2098                     	;BIGRAM
   603                           
   604                           ; Clear objects allocated to BITCOMMON
   605  005C  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   606                           
   607                           ; Clear objects allocated to COMMON
   608  005D  01F6               	clrf	__pbssCOMMON& (0+127)
   609  005E  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   610  005F  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   611                           
   612                           ; Clear objects allocated to BANK0
   613  0060  01E7               	clrf	__pbssBANK0& (0+127)
   614  0061  01E8               	clrf	(__pbssBANK0+1)& (0+127)
   615  0062  01E9               	clrf	(__pbssBANK0+2)& (0+127)
   616  0063  01EA               	clrf	(__pbssBANK0+3)& (0+127)
   617  0064  01EB               	clrf	(__pbssBANK0+4)& (0+127)
   618  0065  01EC               	clrf	(__pbssBANK0+5)& (0+127)
   619  0066  01ED               	clrf	(__pbssBANK0+6)& (0+127)
   620                           
   621                           ; Initialize objects allocated to BIGRAM
   622  0067  3084               	movlw	low __pidataBIGRAM
   623  0068  0084               	movwf	4
   624  0069  3083               	movlw	(high __pidataBIGRAM)| (0+128)
   625  006A  0085               	movwf	5
   626  006B  3098               	movlw	152
   627  006C  0086               	movwf	6
   628  006D  3020               	movlw	32
   629  006E  0087               	movwf	7
   630  006F  3000               	movlw	0
   631  0070  00FF               	movwf	127
   632  0071  3058               	movlw	88
   633  0072  3184  243F  3180   	fcall	init_ram
   634                           
   635                           ; Initialize objects allocated to BANK0
   636  0075  3012               	movlw	low __pidataBANK0
   637  0076  0084               	movwf	4
   638  0077  3084               	movlw	(high __pidataBANK0)| (0+128)
   639  0078  0085               	movwf	5
   640  0079  3050               	movlw	low __pdataBANK0
   641  007A  0086               	movwf	6
   642  007B  3000               	movlw	high __pdataBANK0
   643  007C  0087               	movwf	7
   644  007D  3000               	movlw	0
   645  007E  00FF               	movwf	127
   646  007F  3017               	movlw	23
   647  0080  3184  243F  3180   	fcall	init_ram
   648                           
   649                           ; Initialize objects allocated to BANK1
   650  0083  3029               	movlw	low __pidataBANK1
   651  0084  0084               	movwf	4
   652  0085  3084               	movlw	(high __pidataBANK1)| (0+128)
   653  0086  0085               	movwf	5
   654  0087  30A0               	movlw	low __pdataBANK1
   655  0088  0086               	movwf	6
   656  0089  3000               	movlw	high __pdataBANK1
   657  008A  0087               	movwf	7
   658  008B  3000               	movlw	0
   659  008C  00FF               	movwf	127
   660  008D  3016               	movlw	22
   661  008E  3184  243F  3180   	fcall	init_ram
   662  0091                     end_of_initialization:	
   663                           ;End of C runtime variable initialization code
   664                           
   665  0091  0020               	movlb	0
   666  0092  2893               	ljmp	_main	;jump to C main() function
   667  0093                     __pmaintext:	
   668 ;;Data sizes: Strings 301, constant 40, data 133, bss 10, persistent 0 stack 0
   669 ;;Auto spaces:   Size  Autos    Used
   670 ;; COMMON          14      6      10
   671 ;; BANK0           80     48      78
   672 ;; BANK1           72      3      25
   673 ;; BANK2            0      0       0
   674 ;;
   675 ;; Pointer list with targets:
   676 ;; ?___ftpack	float  size(1) Largest target is 0
   677 ;;
   678 ;; ?___ftmul	float  size(1) Largest target is 0
   679 ;;
   680 ;; ?___fttol	long  size(1) Largest target is 0
   681 ;;
   682 ;; ?_readIntParam	unsigned int  size(1) Largest target is 0
   683 ;;
   684 ;; ?___ftdiv	float  size(1) Largest target is 0
   685 ;;
   686 ;; ?___lwtoft	float  size(1) Largest target is 0
   687 ;;
   688 ;; SystemConfig	PTR struct _SystemConfig size(1) Largest target is 0
   689 ;;		 -> NULL(NULL[0]), 
   690 ;;
   691 ;; S10593$_cp	PTR const unsigned char  size(1) Largest target is 0
   692 ;;
   693 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   694 ;;
   695 ;; BatteryStandard	PTR unsigned int  size(1) Largest target is 22
   696 ;;		 -> Battery_24V(BANK1[22]), Battery_12V(BANK0[22]), NULL(NULL[0]), 
   697 ;;
   698 ;;
   699 ;; Critical Paths under _main in COMMON
   700 ;;
   701 ;;   _main->_tranform_OS_State
   702 ;;   _writeIntParam->_WriteEE
   703 ;;   _readIntParam->_ReadEE
   704 ;;   _API_LCD_CLEAR->_CTKSoftDelay
   705 ;;   _API_LCD_INIT->_CTKSoftDelay
   706 ;;   _lcd_write_command->_CTKSoftDelay
   707 ;;   _system_state_init->_CTKSoftDelay
   708 ;;
   709 ;; Critical Paths under _ISR_Timer in COMMON
   710 ;;
   711 ;;   _ISR_Timer->_handlerKeyEventInput
   712 ;;   _handlerPWMInterrupt->_openOrClosePWM
   713 ;;   _openOrClosePWM->_setPWM
   714 ;;
   715 ;; Critical Paths under _main in BANK0
   716 ;;
   717 ;;   _LoadParamFromEPPROM->_ReadOrWriteEE
   718 ;;   _ReadOrWriteEE->_readIntParam
   719 ;;   _writeIntParam->___ftmul
   720 ;;   _readIntParam->___ftdiv
   721 ;;   _API_LCD_CLEAR->_lcd_write_command
   722 ;;   _API_LCD_INIT->_lcd_write_command
   723 ;;   ___lwtoft->___fttol
   724 ;;   ___ftmul->___lwtoft
   725 ;;   ___ftdiv->___lwtoft
   726 ;;   _lcd_write_command->_CTKSoftDelay
   727 ;;   _system_state_init->_CTKSoftDelay
   728 ;;   ___fttol->___ftpack
   729 ;;
   730 ;; Critical Paths under _ISR_Timer in BANK0
   731 ;;
   732 ;;   None.
   733 ;;
   734 ;; Critical Paths under _main in BANK1
   735 ;;
   736 ;;   _LoadParamFromEPPROM->_ReadOrWriteEE
   737 ;;
   738 ;; Critical Paths under _ISR_Timer in BANK1
   739 ;;
   740 ;;   None.
   741 ;;
   742 ;; Critical Paths under _main in BANK2
   743 ;;
   744 ;;   None.
   745 ;;
   746 ;; Critical Paths under _ISR_Timer in BANK2
   747 ;;
   748 ;;   None.
   749 ;;
   750 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   751 ;;
   752 ;;
   753 ;;Call Graph Tables:
   754 ;;
   755 ;; ---------------------------------------------------------------------------------
   756 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   757 ;; ---------------------------------------------------------------------------------
   758 ;; (0) _main                                                 0     0      0    4656
   759 ;;                  _system_state_init
   760 ;;                _LoadParamFromEPPROM
   761 ;;                       _API_LCD_INIT
   762 ;;                      _API_LCD_CLEAR
   763 ;;                  _tranform_OS_State
   764 ;; ---------------------------------------------------------------------------------
   765 ;; (1) _LoadParamFromEPPROM                                  0     0      0    3697
   766 ;;                      _ReadOrWriteEE
   767 ;; ---------------------------------------------------------------------------------
   768 ;; (2) _ReadOrWriteEE                                        5     3      2    3697
   769 ;;                                             46 BANK0      2     0      2
   770 ;;                                              0 BANK1      3     3      0
   771 ;;                       _readIntParam
   772 ;;                      _writeIntParam
   773 ;; ---------------------------------------------------------------------------------
   774 ;; (3) _writeIntParam                                        5     2      3    1734
   775 ;;                                             39 BANK0      5     2      3
   776 ;;                           ___lwtoft
   777 ;;                            ___ftmul
   778 ;;                            ___fttol
   779 ;;                            _WriteEE
   780 ;; ---------------------------------------------------------------------------------
   781 ;; (3) _readIntParam                                         7     5      2    1579
   782 ;;                                             39 BANK0      7     5      2
   783 ;;                             _ReadEE
   784 ;;                           ___lwtoft
   785 ;;                            ___ftdiv
   786 ;;                            ___fttol
   787 ;; ---------------------------------------------------------------------------------
   788 ;; (1) _API_LCD_CLEAR                                        0     0      0     365
   789 ;;                  _lcd_write_command
   790 ;;                       _CTKSoftDelay
   791 ;; ---------------------------------------------------------------------------------
   792 ;; (1) _API_LCD_INIT                                         0     0      0     365
   793 ;;                  _lcd_write_command
   794 ;;                       _CTKSoftDelay
   795 ;; ---------------------------------------------------------------------------------
   796 ;; (4) ___lwtoft                                             3     0      3     343
   797 ;;                                             21 BANK0      3     0      3
   798 ;;                           ___ftpack
   799 ;;                            ___fttol (ARG)
   800 ;; ---------------------------------------------------------------------------------
   801 ;; (4) ___ftmul                                             15     9      6     800
   802 ;;                                             24 BANK0     15     9      6
   803 ;;                           ___ftpack
   804 ;;                           ___lwtoft (ARG)
   805 ;;                            ___fttol (ARG)
   806 ;; ---------------------------------------------------------------------------------
   807 ;; (4) ___ftdiv                                             15     9      6     732
   808 ;;                                             24 BANK0     15     9      6
   809 ;;                           ___ftpack
   810 ;;                           ___lwtoft (ARG)
   811 ;;                            ___fttol (ARG)
   812 ;; ---------------------------------------------------------------------------------
   813 ;; (2) _lcd_write_command                                    1     1      0     198
   814 ;;                                              4 BANK0      1     1      0
   815 ;;                       _CTKSoftDelay
   816 ;; ---------------------------------------------------------------------------------
   817 ;; (1) _system_state_init                                    0     0      0     167
   818 ;;                       _CTKSoftDelay
   819 ;; ---------------------------------------------------------------------------------
   820 ;; (4) ___fttol                                             13     9      4     371
   821 ;;                                              8 BANK0     13     9      4
   822 ;;                           ___ftpack (ARG)
   823 ;; ---------------------------------------------------------------------------------
   824 ;; (5) ___ftpack                                             8     3      5     312
   825 ;;                                              0 BANK0      8     3      5
   826 ;; ---------------------------------------------------------------------------------
   827 ;; (4) _WriteEE                                              2     1      1      62
   828 ;;                                              4 COMMON     2     1      1
   829 ;; ---------------------------------------------------------------------------------
   830 ;; (4) _ReadEE                                               1     1      0      31
   831 ;;                                              4 COMMON     1     1      0
   832 ;; ---------------------------------------------------------------------------------
   833 ;; (2) _CTKSoftDelay                                         6     4      2     167
   834 ;;                                              4 COMMON     2     0      2
   835 ;;                                              0 BANK0      4     4      0
   836 ;; ---------------------------------------------------------------------------------
   837 ;; (1) _tranform_OS_State                                    4     2      2      62
   838 ;;                                              4 COMMON     2     0      2
   839 ;;                                              0 BANK0      2     2      0
   840 ;; ---------------------------------------------------------------------------------
   841 ;; Estimated maximum stack depth 5
   842 ;; ---------------------------------------------------------------------------------
   843 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   844 ;; ---------------------------------------------------------------------------------
   845 ;; (6) _ISR_Timer                                            0     0      0     198
   846 ;;               _handlerKeyEventInput
   847 ;;                _handlerPWMInterrupt
   848 ;; ---------------------------------------------------------------------------------
   849 ;; (7) _handlerPWMInterrupt                                  0     0      0      88
   850 ;;                     _openOrClosePWM
   851 ;; ---------------------------------------------------------------------------------
   852 ;; (8) _openOrClosePWM                                       1     1      0      88
   853 ;;                                              1 COMMON     1     1      0
   854 ;;                             _setPWM
   855 ;; ---------------------------------------------------------------------------------
   856 ;; (9) _setPWM                                               1     1      0      22
   857 ;;                                              0 COMMON     1     1      0
   858 ;; ---------------------------------------------------------------------------------
   859 ;; (7) _handlerKeyEventInput                                 4     2      2     110
   860 ;;                                              0 COMMON     4     2      2
   861 ;; ---------------------------------------------------------------------------------
   862 ;; Estimated maximum stack depth 9
   863 ;; ---------------------------------------------------------------------------------
   864 ;; Call Graph Graphs:
   865 ;; _main (ROOT)
   866 ;;   _system_state_init
   867 ;;     _CTKSoftDelay
   868 ;;   _LoadParamFromEPPROM
   869 ;;     _ReadOrWriteEE
   870 ;;       _readIntParam
   871 ;;         _ReadEE
   872 ;;         ___lwtoft
   873 ;;           ___ftpack
   874 ;;           ___fttol (ARG)
   875 ;;             ___ftpack (ARG)
   876 ;;         ___ftdiv
   877 ;;           ___ftpack
   878 ;;           ___lwtoft (ARG)
   879 ;;             ___ftpack
   880 ;;             ___fttol (ARG)
   881 ;;               ___ftpack (ARG)
   882 ;;           ___fttol (ARG)
   883 ;;             ___ftpack (ARG)
   884 ;;         ___fttol
   885 ;;           ___ftpack (ARG)
   886 ;;       _writeIntParam
   887 ;;         ___lwtoft
   888 ;;           ___ftpack
   889 ;;           ___fttol (ARG)
   890 ;;             ___ftpack (ARG)
   891 ;;         ___ftmul
   892 ;;           ___ftpack
   893 ;;           ___lwtoft (ARG)
   894 ;;             ___ftpack
   895 ;;             ___fttol (ARG)
   896 ;;               ___ftpack (ARG)
   897 ;;           ___fttol (ARG)
   898 ;;             ___ftpack (ARG)
   899 ;;         ___fttol
   900 ;;           ___ftpack (ARG)
   901 ;;         _WriteEE
   902 ;;   _API_LCD_INIT
   903 ;;     _lcd_write_command
   904 ;;       _CTKSoftDelay
   905 ;;     _CTKSoftDelay
   906 ;;   _API_LCD_CLEAR
   907 ;;     _lcd_write_command
   908 ;;       _CTKSoftDelay
   909 ;;     _CTKSoftDelay
   910 ;;   _tranform_OS_State
   911 ;;
   912 ;; _ISR_Timer (ROOT)
   913 ;;   _handlerKeyEventInput
   914 ;;   _handlerPWMInterrupt
   915 ;;     _openOrClosePWM
   916 ;;       _setPWM
   917 ;;
   918 ;; Address spaces:
   919 ;;Name               Size   Autos  Total    Cost      Usage
   920 ;;BIGRAM              F0      0       0       0        0.0%
   921 ;;EEDATA             100      0       0       0        0.0%
   922 ;;NULL                 0      0       0       0        0.0%
   923 ;;CODE                 0      0       0       0        0.0%
   924 ;;BITCOMMON            E      0       1       1        7.1%
   925 ;;BITSFR0              0      0       0       1        0.0%
   926 ;;SFR0                 0      0       0       1        0.0%
   927 ;;COMMON               E      6       A       2       71.4%
   928 ;;BITSFR1              0      0       0       2        0.0%
   929 ;;SFR1                 0      0       0       2        0.0%
   930 ;;BITSFR2              0      0       0       3        0.0%
   931 ;;SFR2                 0      0       0       3        0.0%
   932 ;;STACK                0      0       D       3        0.0%
   933 ;;BITSFR3              0      0       0       4        0.0%
   934 ;;SFR3                 0      0       0       4        0.0%
   935 ;;ABS                  0      0      71       4        0.0%
   936 ;;BITBANK0            50      0       0       5        0.0%
   937 ;;BITSFR4              0      0       0       5        0.0%
   938 ;;SFR4                 0      0       0       5        0.0%
   939 ;;BANK0               50     30      4E       6       97.5%
   940 ;;BITSFR5              0      0       0       6        0.0%
   941 ;;SFR5                 0      0       0       6        0.0%
   942 ;;BITBANK1            50      0       0       7        0.0%
   943 ;;BITSFR6              0      0       0       7        0.0%
   944 ;;SFR6                 0      0       0       7        0.0%
   945 ;;BANK1               48      3      19       8       34.7%
   946 ;;BITSFR7              0      0       0       8        0.0%
   947 ;;SFR7                 0      0       0       8        0.0%
   948 ;;BITBANK2            50      0       0       9        0.0%
   949 ;;BITSFR8              0      0       0       9        0.0%
   950 ;;SFR8                 0      0       0       9        0.0%
   951 ;;BITSFR9              0      0       0      10        0.0%
   952 ;;SFR9                 0      0       0      10        0.0%
   953 ;;BANK2                0      0       0      10        0.0%
   954 ;;BITSFR10             0      0       0      11        0.0%
   955 ;;SFR10                0      0       0      11        0.0%
   956 ;;DATA                 0      0      7E      11        0.0%
   957 ;;BITSFR11             0      0       0      12        0.0%
   958 ;;SFR11                0      0       0      12        0.0%
   959 ;;BITSFR12             0      0       0      13        0.0%
   960 ;;SFR12                0      0       0      13        0.0%
   961 ;;BITSFR13             0      0       0      14        0.0%
   962 ;;SFR13                0      0       0      14        0.0%
   963 ;;BITSFR14             0      0       0      15        0.0%
   964 ;;SFR14                0      0       0      15        0.0%
   965 ;;BITSFR15             0      0       0      16        0.0%
   966 ;;SFR15                0      0       0      16        0.0%
   967 ;;BITSFR16             0      0       0      17        0.0%
   968 ;;SFR16                0      0       0      17        0.0%
   969 ;;BITSFR17             0      0       0      18        0.0%
   970 ;;SFR17                0      0       0      18        0.0%
   971 ;;BITSFR18             0      0       0      19        0.0%
   972 ;;SFR18                0      0       0      19        0.0%
   973 ;;BITSFR19             0      0       0      20        0.0%
   974 ;;SFR19                0      0       0      20        0.0%
   975 ;;BITSFR20             0      0       0      21        0.0%
   976 ;;SFR20                0      0       0      21        0.0%
   977 ;;BITSFR21             0      0       0      22        0.0%
   978 ;;SFR21                0      0       0      22        0.0%
   979 ;;BITSFR22             0      0       0      23        0.0%
   980 ;;SFR22                0      0       0      23        0.0%
   981 ;;BITSFR23             0      0       0      24        0.0%
   982 ;;SFR23                0      0       0      24        0.0%
   983 ;;BITSFR24             0      0       0      25        0.0%
   984 ;;SFR24                0      0       0      25        0.0%
   985 ;;BITSFR25             0      0       0      26        0.0%
   986 ;;SFR25                0      0       0      26        0.0%
   987 ;;BITSFR26             0      0       0      27        0.0%
   988 ;;SFR26                0      0       0      27        0.0%
   989 ;;BITSFR27             0      0       0      28        0.0%
   990 ;;SFR27                0      0       0      28        0.0%
   991 ;;BITSFR28             0      0       0      29        0.0%
   992 ;;SFR28                0      0       0      29        0.0%
   993 ;;BITSFR29             0      0       0      30        0.0%
   994 ;;SFR29                0      0       0      30        0.0%
   995 ;;BITSFR30             0      0       0      31        0.0%
   996 ;;SFR30                0      0       0      31        0.0%
   997 ;;BITSFR31             0      0       0      32        0.0%
   998 ;;SFR31                0      0       0      32        0.0%
   999                           
  1000                           
  1001 ;; *************** function _main *****************
  1002 ;; Defined at:
  1003 ;;		line 374 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\main.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;		None               void
  1010 ;; Registers used:
  1011 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 17F/0
  1014 ;;		On exit  : 1F/0
  1015 ;;		Unchanged: FFE00/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1017 ;;      Params:         0       0       0       0
  1018 ;;      Locals:         0       0       0       0
  1019 ;;      Temps:          0       0       0       0
  1020 ;;      Totals:         0       0       0       0
  1021 ;;Total ram usage:        0 bytes
  1022 ;; Hardware stack levels required when called:    9
  1023 ;; This function calls:
  1024 ;;		_system_state_init
  1025 ;;		_LoadParamFromEPPROM
  1026 ;;		_API_LCD_INIT
  1027 ;;		_API_LCD_CLEAR
  1028 ;;		_tranform_OS_State
  1029 ;; This function is called by:
  1030 ;;		Startup code after reset
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033  0093                     _main:	
  1034                           
  1035                           ;main.c: 375: system_state_init();
  1036                           
  1037                           ; Regs used in _main: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
  1038  0093  20B2  3180         	fcall	_system_state_init
  1039                           
  1040                           ;main.c: 376: LoadParamFromEPPROM();
  1041  0095  2131  3180         	fcall	_LoadParamFromEPPROM
  1042                           
  1043                           ;main.c: 378: API_LCD_INIT();
  1044  0097  2110  3180         	fcall	_API_LCD_INIT
  1045                           
  1046                           ;main.c: 379: API_LCD_CLEAR();
  1047  0099  212B  3180         	fcall	_API_LCD_CLEAR
  1048                           
  1049                           ;main.c: 380: (LATC |= (1 << 4));
  1050  009B  0022               	movlb	2	; select bank2
  1051  009C  160E               	bsf	14,4	;volatile
  1052  009D                     l11578:	
  1053  009D  0064               	clrwdt	;#
  1054                           
  1055                           ;main.c: 385: tranform_OS_State(0);
  1056  009E  01F4               	clrf	?_tranform_OS_State
  1057  009F  01F5               	clrf	?_tranform_OS_State+1
  1058  00A0  20A3  3180         	fcall	_tranform_OS_State
  1059  00A2  289D               	goto	l11578
  1060  00A3                     __end_of_main:	
  1061  00A3                     __ptext663:	
  1062 ;; =============== function _CTKSoftDelay ends ============
  1063                           
  1064                           
  1065 ;; *************** function _tranform_OS_State *****************
  1066 ;; Defined at:
  1067 ;;		line 317 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\main.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  state           2    4[COMMON] int 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;		None               void
  1074 ;; Registers used:
  1075 ;;		wreg
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/2
  1078 ;;		On exit  : 1F/0
  1079 ;;		Unchanged: FFFE0/0
  1080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1081 ;;      Params:         2       0       0       0
  1082 ;;      Locals:         0       0       0       0
  1083 ;;      Temps:          0       2       0       0
  1084 ;;      Totals:         2       2       0       0
  1085 ;;Total ram usage:        4 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; Hardware stack levels required when called:    4
  1088 ;; This function calls:
  1089 ;;		Nothing
  1090 ;; This function is called by:
  1091 ;;		_main
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094  00A3                     _tranform_OS_State:	
  1095                           
  1096                           ;main.c: 319: OS_LastState = OS_CurrentState;
  1097                           
  1098                           ; Regs used in _tranform_OS_State: [wreg]
  1099  00A3  0020               	movlb	0	; select bank0
  1100  00A4  086C               	movf	_OS_CurrentState,w
  1101  00A5  00A0               	movwf	??_tranform_OS_State
  1102  00A6  01A1               	clrf	??_tranform_OS_State+1
  1103  00A7  0875               	movf	tranform_OS_State@state+1,w
  1104  00A8  0621               	xorwf	??_tranform_OS_State+1,w
  1105  00A9  1D03               	skipz
  1106  00AA  28AD               	goto	u1215
  1107  00AB  0874               	movf	tranform_OS_State@state,w
  1108  00AC  0620               	xorwf	??_tranform_OS_State,w
  1109  00AD                     u1215:	
  1110  00AD  1903               	skipnz
  1111  00AE  0008               	return
  1112                           
  1113                           ;main.c: 321: OS_StateTime = OS_Time;
  1114  00AF  0874               	movf	tranform_OS_State@state,w
  1115  00B0  00EC               	movwf	_OS_CurrentState
  1116  00B1  0008               	return
  1117  00B2                     __end_of_tranform_OS_State:	
  1118  00B2                     __ptext657:	
  1119 ;; =============== function _lcd_write_command ends ============
  1120                           
  1121                           
  1122 ;; *************** function _system_state_init *****************
  1123 ;; Defined at:
  1124 ;;		line 42 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\mypic.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;		None
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;		None               void
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, status,0, pclath, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 17F/0
  1135 ;;		On exit  : 17F/0
  1136 ;;		Unchanged: FFE80/0
  1137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1138 ;;      Params:         0       0       0       0
  1139 ;;      Locals:         0       0       0       0
  1140 ;;      Temps:          0       0       0       0
  1141 ;;      Totals:         0       0       0       0
  1142 ;;Total ram usage:        0 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    5
  1145 ;; This function calls:
  1146 ;;		_CTKSoftDelay
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151  00B2                     _system_state_init:	
  1152                           
  1153                           ;mypic.c: 44: OSCCON = 0x70;
  1154                           
  1155                           ; Regs used in _system_state_init: [wreg+status,2+status,0+pclath+cstack]
  1156  00B2  3070               	movlw	112
  1157  00B3  0021               	movlb	1	; select bank1
  1158  00B4  0099               	movwf	25	;volatile
  1159                           
  1160                           ;mypic.c: 45: WDTCON = 0x18;
  1161  00B5  3018               	movlw	24
  1162  00B6  0097               	movwf	23	;volatile
  1163                           
  1164                           ;mypic.c: 48: TRISA = 0b00101010;
  1165  00B7  302A               	movlw	42
  1166  00B8  008C               	movwf	12	;volatile
  1167                           
  1168                           ;mypic.c: 49: TRISB = 0b00111110;
  1169  00B9  303E               	movlw	62
  1170  00BA  008D               	movwf	13	;volatile
  1171                           
  1172                           ;mypic.c: 50: TRISC = 0x00;
  1173  00BB  018E               	clrf	14	;volatile
  1174                           
  1175                           ;mypic.c: 51: TRISD = 0x00;
  1176  00BC  018F               	clrf	15	;volatile
  1177                           
  1178                           ;mypic.c: 52: TRISE = 0b00000010;
  1179  00BD  3002               	movlw	2
  1180  00BE  0090               	movwf	16	;volatile
  1181                           
  1182                           ;mypic.c: 54: ANSELA = 0b00101010;
  1183  00BF  302A               	movlw	42
  1184  00C0  0023               	movlb	3	; select bank3
  1185  00C1  008C               	movwf	12	;volatile
  1186                           
  1187                           ;mypic.c: 55: ANSELB = 0b00000110;
  1188  00C2  3006               	movlw	6
  1189  00C3  008D               	movwf	13	;volatile
  1190                           
  1191                           ;mypic.c: 56: ANSELE = 0b00000010;
  1192  00C4  3002               	movlw	2
  1193  00C5  0090               	movwf	16	;volatile
  1194                           
  1195                           ;mypic.c: 66: TMR1H = (65536 - (100000 / 4)) >> 8;
  1196  00C6  309E               	movlw	158
  1197  00C7  0020               	movlb	0	; select bank0
  1198  00C8  0097               	movwf	23	;volatile
  1199                           
  1200                           ;mypic.c: 67: TMR1L = (65536 - (100000 / 4)) & 0xFF;
  1201  00C9  3058               	movlw	88
  1202  00CA  0096               	movwf	22	;volatile
  1203                           
  1204                           ;mypic.c: 68: PEIE = 1;
  1205  00CB  170B               	bsf	11,6
  1206                           
  1207                           ;mypic.c: 69: TMR1IF = 0;
  1208  00CC  1011               	bcf	17,0
  1209                           
  1210                           ;mypic.c: 70: TMR1IE = 1;
  1211  00CD  0021               	movlb	1	; select bank1
  1212  00CE  1411               	bsf	17,0
  1213                           
  1214                           ;mypic.c: 71: T1CON = 0x31;
  1215  00CF  3031               	movlw	49
  1216  00D0  0020               	movlb	0	; select bank0
  1217  00D1  0098               	movwf	24	;volatile
  1218                           
  1219                           ;mypic.c: 72: TMR0IE = 1;
  1220  00D2  168B               	bsf	11,5
  1221                           
  1222                           ;mypic.c: 75: TMR2IF = 0;
  1223  00D3  1091               	bcf	17,1
  1224                           
  1225                           ;mypic.c: 76: T2CON = 0x06;
  1226  00D4  3006               	movlw	6
  1227  00D5  009C               	movwf	28	;volatile
  1228                           
  1229                           ;mypic.c: 77: PR2 = 8;
  1230  00D6  3008               	movlw	8
  1231  00D7  009B               	movwf	27	;volatile
  1232                           
  1233                           ;mypic.c: 78: TMR2IE = 1;
  1234  00D8  0021               	movlb	1	; select bank1
  1235  00D9  1491               	bsf	17,1
  1236                           
  1237                           ;mypic.c: 82: TMR4IF = 0;
  1238  00DA  0020               	movlb	0	; select bank0
  1239  00DB  1093               	bcf	19,1
  1240                           
  1241                           ;mypic.c: 85: T4CON = 0b00000101;
  1242  00DC  3005               	movlw	5
  1243  00DD  0028               	movlb	8	; select bank8
  1244  00DE  0097               	movwf	23	;volatile
  1245                           
  1246                           ;mypic.c: 86: PR4 = 250;
  1247  00DF  30FA               	movlw	250
  1248  00E0  0096               	movwf	22	;volatile
  1249                           
  1250                           ;mypic.c: 87: TMR4IE = 1;
  1251  00E1  0021               	movlb	1	; select bank1
  1252  00E2  1493               	bsf	19,1
  1253                           
  1254                           ;mypic.c: 100: IOCBP = 0x38;
  1255  00E3  3038               	movlw	56
  1256  00E4  0027               	movlb	7	; select bank7
  1257  00E5  0094               	movwf	20	;volatile
  1258                           
  1259                           ;mypic.c: 101: IOCBN = 0x38;
  1260  00E6  0095               	movwf	21	;volatile
  1261                           
  1262                           ;mypic.c: 105: PEIE = 1;
  1263  00E7  170B               	bsf	11,6
  1264                           
  1265                           ;mypic.c: 106: GIE = 1;
  1266  00E8  178B               	bsf	11,7
  1267                           
  1268                           ;mypic.c: 109: (PORTA |= (1 << 0));
  1269  00E9  0020               	movlb	0	; select bank0
  1270  00EA  140C               	bsf	12,0	;volatile
  1271                           
  1272                           ;mypic.c: 110: (PORTB |= (1 << 0));
  1273  00EB  140D               	bsf	13,0	;volatile
  1274                           
  1275                           ;mypic.c: 113: LoadState = 1;
  1276  00EC  160C               	bsf	12,4	;volatile
  1277                           
  1278                           ;mypic.c: 114: (PORTE |= (1 << 0));
  1279  00ED  1410               	bsf	16,0	;volatile
  1280                           
  1281                           ;mypic.c: 115: CTKSoftDelay(20);
  1282  00EE  3014               	movlw	20
  1283  00EF  00F4               	movwf	?_CTKSoftDelay
  1284  00F0  01F5               	clrf	?_CTKSoftDelay+1
  1285  00F1  20F8  3180         	fcall	_CTKSoftDelay
  1286                           
  1287                           ;mypic.c: 116: (PORTE &= ~(1 << 0));
  1288  00F3  1010               	bcf	16,0	;volatile
  1289                           
  1290                           ;mypic.c: 117: CTKSoftDelay(20);
  1291  00F4  3014               	movlw	20
  1292  00F5  00F4               	movwf	?_CTKSoftDelay
  1293  00F6  01F5               	clrf	?_CTKSoftDelay+1
  1294  00F7  28F8               	ljmp	l11256
  1295  00F8                     __end_of_system_state_init:	
  1296  00F8                     __ptext662:	
  1297 ;; =============== function _ReadEE ends ============
  1298                           
  1299                           
  1300 ;; *************** function _CTKSoftDelay *****************
  1301 ;; Defined at:
  1302 ;;		line 6 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\public.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;  x               2    4[COMMON] unsigned int 
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  b               2    2[BANK0 ] unsigned int 
  1307 ;;  a               2    0[BANK0 ] unsigned int 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;		None               void
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0
  1312 ;; Tracked objects:
  1313 ;;		On entry : 1F/0
  1314 ;;		On exit  : 1F/0
  1315 ;;		Unchanged: FFFE0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1317 ;;      Params:         2       0       0       0
  1318 ;;      Locals:         0       4       0       0
  1319 ;;      Temps:          0       0       0       0
  1320 ;;      Totals:         2       4       0       0
  1321 ;;Total ram usage:        6 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    4
  1324 ;; This function calls:
  1325 ;;		Nothing
  1326 ;; This function is called by:
  1327 ;;		_lcd_write_command
  1328 ;;		_API_LCD_INIT
  1329 ;;		_API_LCD_CLEAR
  1330 ;;		_system_state_init
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333  00F8                     _CTKSoftDelay:	
  1334  00F8                     l11256:	
  1335                           ; Regs used in _CTKSoftDelay: [wreg+status,2+status,0]
  1336                           
  1337                           
  1338                           ;public.c: 7: unsigned int a,b;
  1339                           ;public.c: 8: for(a=x;a>0;a--)
  1340  00F8  0875               	movf	CTKSoftDelay@x+1,w
  1341  00F9  00A1               	movwf	CTKSoftDelay@a+1
  1342  00FA  0874               	movf	CTKSoftDelay@x,w
  1343  00FB  00A0               	movwf	CTKSoftDelay@a
  1344  00FC                     l11258:	
  1345  00FC  0821               	movf	CTKSoftDelay@a+1,w
  1346  00FD  0420               	iorwf	CTKSoftDelay@a,w
  1347  00FE  1903               	btfsc	3,2
  1348  00FF  0008               	return
  1349                           
  1350                           ;public.c: 9: for(b=10;b>0;b--);
  1351  0100  300A               	movlw	10
  1352  0101  00A2               	movwf	CTKSoftDelay@b
  1353  0102  01A3               	clrf	CTKSoftDelay@b+1
  1354  0103  3001               	movlw	1
  1355  0104                     L1:	
  1356  0104  02A2               	subwf	CTKSoftDelay@b,f
  1357  0105  3000               	movlw	0
  1358  0106  3BA3               	subwfb	CTKSoftDelay@b+1,f
  1359  0107  0823               	movf	CTKSoftDelay@b+1,w
  1360  0108  0422               	iorwf	CTKSoftDelay@b,w
  1361  0109  3001               	movlw	1
  1362  010A  1D03               	skipz
  1363  010B  2904               	goto	L1
  1364  010C  02A0               	subwf	CTKSoftDelay@a,f
  1365  010D  3000               	movlw	0
  1366  010E  3BA1               	subwfb	CTKSoftDelay@a+1,f
  1367  010F  28FC               	goto	l11258
  1368  0110                     __end_of_CTKSoftDelay:	
  1369  0110                     __ptext652:	
  1370 ;; =============== function _API_LCD_CLEAR ends ============
  1371                           
  1372                           
  1373 ;; *************** function _API_LCD_INIT *****************
  1374 ;; Defined at:
  1375 ;;		line 53 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\LM016.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;		None               void
  1382 ;; Registers used:
  1383 ;;		wreg, status,2, status,0, pclath, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 1F/0
  1387 ;;		Unchanged: FFFE0/0
  1388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1389 ;;      Params:         0       0       0       0
  1390 ;;      Locals:         0       0       0       0
  1391 ;;      Temps:          0       0       0       0
  1392 ;;      Totals:         0       0       0       0
  1393 ;;Total ram usage:        0 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    6
  1396 ;; This function calls:
  1397 ;;		_lcd_write_command
  1398 ;;		_CTKSoftDelay
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403  0110                     _API_LCD_INIT:	
  1404                           
  1405                           ;LM016.c: 54: lcd_write_command(0x38);
  1406                           
  1407                           ; Regs used in _API_LCD_INIT: [wreg+status,2+status,0+pclath+cstack]
  1408  0110  3038               	movlw	56
  1409  0111  211F  3180         	fcall	_lcd_write_command
  1410                           
  1411                           ;LM016.c: 55: lcd_write_command(0x0c);
  1412  0113  300C               	movlw	12
  1413  0114  211F  3180         	fcall	_lcd_write_command
  1414                           
  1415                           ;LM016.c: 56: lcd_write_command(0x06);
  1416  0116  3006               	movlw	6
  1417  0117  211F  3180         	fcall	_lcd_write_command
  1418                           
  1419                           ;LM016.c: 57: lcd_write_command(0x01);
  1420  0119  3001               	movlw	1
  1421  011A  211F  3180         	fcall	_lcd_write_command
  1422                           
  1423                           ;LM016.c: 58: CTKSoftDelay(1000);
  1424  011C  237F  3180         	fcall	PL5	;call to abstracted procedure
  1425  011E  28F8               	ljmp	l11256
  1426  011F                     __end_of_API_LCD_INIT:	
  1427  011F                     __ptext656:	
  1428 ;; =============== function ___ftdiv ends ============
  1429                           
  1430                           
  1431 ;; *************** function _lcd_write_command *****************
  1432 ;; Defined at:
  1433 ;;		line 14 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\LM016.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  command         1    wreg     unsigned char 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  command         1    4[BANK0 ] unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;		None               void
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0, pclath, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 1F/0
  1445 ;;		Unchanged: FFFE0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1447 ;;      Params:         0       0       0       0
  1448 ;;      Locals:         0       1       0       0
  1449 ;;      Temps:          0       0       0       0
  1450 ;;      Totals:         0       1       0       0
  1451 ;;Total ram usage:        1 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:    5
  1454 ;; This function calls:
  1455 ;;		_CTKSoftDelay
  1456 ;; This function is called by:
  1457 ;;		_API_LCD_INIT
  1458 ;;		_API_LCD_CLEAR
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461  011F                     _lcd_write_command:	
  1462                           
  1463                           ; Regs used in _lcd_write_command: [wreg+status,2+status,0+pclath+cstack]
  1464                           ;lcd_write_command@command stored from wreg
  1465  011F  0020               	movlb	0	; select bank0
  1466  0120  00A4               	movwf	lcd_write_command@command
  1467                           
  1468                           ;LM016.c: 15: RC1 = 0;
  1469  0121  108E               	bcf	14,1
  1470                           
  1471                           ;LM016.c: 16: RC2 = 0;
  1472  0122  110E               	bcf	14,2
  1473                           
  1474                           ;LM016.c: 17: PORTD = command;
  1475  0123  008F               	movwf	15	;volatile
  1476                           
  1477                           ;LM016.c: 21: CTKSoftDelay(50);
  1478  0124  3032               	movlw	50
  1479  0125  00F4               	movwf	?_CTKSoftDelay
  1480  0126  01F5               	clrf	?_CTKSoftDelay+1
  1481  0127  20F8               	fcall	_CTKSoftDelay
  1482                           
  1483                           ;LM016.c: 22: RC3 = 1;
  1484  0128  158E               	bsf	14,3
  1485                           
  1486                           ;LM016.c: 23: RC3 = 0;
  1487  0129  118E               	bcf	14,3
  1488  012A  0008               	return
  1489  012B                     __end_of_lcd_write_command:	
  1490  012B                     __ptext651:	
  1491 ;; =============== function _readIntParam ends ============
  1492                           
  1493                           
  1494 ;; *************** function _API_LCD_CLEAR *****************
  1495 ;; Defined at:
  1496 ;;		line 60 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\LM016.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;		None
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;		None
  1501 ;; Return value:  Size  Location     Type
  1502 ;;		None               void
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0, pclath, cstack
  1505 ;; Tracked objects:
  1506 ;;		On entry : 1F/0
  1507 ;;		On exit  : 1F/0
  1508 ;;		Unchanged: FFFE0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1510 ;;      Params:         0       0       0       0
  1511 ;;      Locals:         0       0       0       0
  1512 ;;      Temps:          0       0       0       0
  1513 ;;      Totals:         0       0       0       0
  1514 ;;Total ram usage:        0 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    6
  1517 ;; This function calls:
  1518 ;;		_lcd_write_command
  1519 ;;		_CTKSoftDelay
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524  012B                     _API_LCD_CLEAR:	
  1525                           
  1526                           ;LM016.c: 61: lcd_write_command(0x01);
  1527                           
  1528                           ; Regs used in _API_LCD_CLEAR: [wreg+status,2+status,0+pclath+cstack]
  1529  012B  3001               	movlw	1
  1530  012C  211F  3180         	fcall	_lcd_write_command
  1531                           
  1532                           ;LM016.c: 62: CTKSoftDelay(1000);
  1533  012E  237F  3180         	fcall	PL5	;call to abstracted procedure
  1534  0130  28F8               	ljmp	l11256
  1535  0131                     __end_of_API_LCD_CLEAR:	
  1536  0131                     __ptext647:	
  1537 ;; =============== function _main ends ============
  1538                           
  1539                           
  1540 ;; *************** function _LoadParamFromEPPROM *****************
  1541 ;; Defined at:
  1542 ;;		line 33 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\kernel.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;		None
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;		None               void
  1549 ;; Registers used:
  1550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 17F/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: FFE00/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1556 ;;      Params:         0       0       0       0
  1557 ;;      Locals:         0       0       0       0
  1558 ;;      Temps:          0       0       0       0
  1559 ;;      Totals:         0       0       0       0
  1560 ;;Total ram usage:        0 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    8
  1563 ;; This function calls:
  1564 ;;		_ReadOrWriteEE
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569  0131                     _LoadParamFromEPPROM:	
  1570                           
  1571                           ;kernel.c: 34: ReadOrWriteEE(0);
  1572                           
  1573                           ; Regs used in _LoadParamFromEPPROM: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
  1574  0131  01CE               	clrf	?_ReadOrWriteEE
  1575  0132  01CF               	clrf	?_ReadOrWriteEE+1
  1576  0133  2934               	ljmp	l11542
  1577  0134                     __end_of_LoadParamFromEPPROM:	
  1578  0134                     __ptext648:	
  1579 ;; =============== function _LoadParamFromEPPROM ends ============
  1580                           
  1581                           
  1582 ;; *************** function _ReadOrWriteEE *****************
  1583 ;; Defined at:
  1584 ;;		line 17 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\kernel.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  read            2   46[BANK0 ] int 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  i               2    1[BANK1 ] int 
  1589 ;;  startAddr       1    0[BANK1 ] unsigned char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;		None               void
  1592 ;; Registers used:
  1593 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 17F/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: FFE00/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1599 ;;      Params:         0       2       0       0
  1600 ;;      Locals:         0       0       3       0
  1601 ;;      Temps:          0       0       0       0
  1602 ;;      Totals:         0       2       3       0
  1603 ;;Total ram usage:        5 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:    7
  1606 ;; This function calls:
  1607 ;;		_readIntParam
  1608 ;;		_writeIntParam
  1609 ;; This function is called by:
  1610 ;;		_LoadParamFromEPPROM
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613  0134                     _ReadOrWriteEE:	
  1614  0134                     l11542:	
  1615                           ; Regs used in _ReadOrWriteEE: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
  1616                           
  1617                           
  1618                           ;kernel.c: 19: unsigned char startAddr = (0 +2);
  1619  0134  3002               	movlw	2
  1620  0135  0021               	movlb	1	; select bank1
  1621  0136  00B6               	movwf	ReadOrWriteEE@startAddr^(0+128)
  1622                           
  1623                           ;kernel.c: 20: if(read){
  1624  0137  0020               	movlb	0	; select bank0
  1625  0138  084F               	movf	ReadOrWriteEE@read+1,w
  1626  0139  044E               	iorwf	ReadOrWriteEE@read,w
  1627  013A  1903               	skipnz
  1628  013B  2942               	goto	l11548
  1629                           
  1630                           ;kernel.c: 21: HW_BATTERY_TYPE = (unsigned char)readIntParam(startAddr);
  1631  013C  3002               	movlw	2
  1632  013D  217D  3180         	fcall	_readIntParam
  1633  013F  0847               	movf	?_readIntParam,w
  1634  0140  00EB               	movwf	_HW_BATTERY_TYPE
  1635                           
  1636                           ;kernel.c: 22: }else{
  1637  0141  2949               	goto	l11550
  1638  0142                     l11548:	
  1639                           
  1640                           ;kernel.c: 23: writeIntParam((unsigned int)HW_BATTERY_TYPE, startAddr);
  1641  0142  086B               	movf	_HW_BATTERY_TYPE,w
  1642  0143  00C7               	movwf	?_writeIntParam
  1643  0144  01C8               	clrf	?_writeIntParam+1
  1644  0145  3002               	movlw	2
  1645  0146  00C9               	movwf	?_writeIntParam+2
  1646  0147  21C4  3180         	fcall	_writeIntParam
  1647  0149                     l11550:	
  1648                           
  1649                           ;kernel.c: 24: }
  1650                           ;kernel.c: 25: for(i = 1; i<10; i++){
  1651  0149  0021               	movlb	1	; select bank1
  1652  014A  01B7               	clrf	ReadOrWriteEE@i^(0+128)
  1653  014B  0AB7               	incf	ReadOrWriteEE@i^(0+128),f
  1654  014C  01B8               	clrf	(ReadOrWriteEE@i+1)^(0+128)
  1655  014D                     l11556:	
  1656                           
  1657                           ;kernel.c: 26: if(read){
  1658  014D  0020               	movlb	0	; select bank0
  1659  014E  084F               	movf	ReadOrWriteEE@read+1,w
  1660  014F  044E               	iorwf	ReadOrWriteEE@read,w
  1661  0150  1903               	skipnz
  1662  0151  295F               	goto	l11560
  1663                           
  1664                           ;kernel.c: 27: ParamConfig[3][i] = readIntParam(startAddr + 2*i);;
  1665  0152  0021               	movlb	1	; select bank1
  1666  0153  3537               	lslf	ReadOrWriteEE@i^(0+128),w
  1667  0154  0736               	addwf	ReadOrWriteEE@startAddr^(0+128),w
  1668  0155  217D  3180         	fcall	_readIntParam
  1669  0157  2369  3180         	fcall	PL2	;call to abstracted procedure
  1670  0159  0020               	movlb	0	; select bank0
  1671  015A  0847               	movf	?_readIntParam,w
  1672  015B  3FC0               	movwi [0]fsr1
  1673  015C  0848               	movf	?_readIntParam+1,w
  1674  015D  3FC1               	movwi [1]fsr1
  1675                           
  1676                           ;kernel.c: 28: }else{
  1677  015E  296D               	goto	l11562
  1678  015F                     l11560:	
  1679                           
  1680                           ;kernel.c: 29: writeIntParam(ParamConfig[3][i], (startAddr + 2*i));
  1681  015F  2369  3180         	fcall	PL2	;call to abstracted procedure
  1682  0161  3F40               	moviw [0]fsr1
  1683  0162  0020               	movlb	0	; select bank0
  1684  0163  00C7               	movwf	?_writeIntParam
  1685  0164  3F41               	moviw [1]fsr1
  1686  0165  00C8               	movwf	?_writeIntParam+1
  1687  0166  0021               	movlb	1	; select bank1
  1688  0167  3537               	lslf	ReadOrWriteEE@i^(0+128),w
  1689  0168  0736               	addwf	ReadOrWriteEE@startAddr^(0+128),w
  1690  0169  0020               	movlb	0	; select bank0
  1691  016A  00C9               	movwf	?_writeIntParam+2
  1692  016B  21C4  3180         	fcall	_writeIntParam
  1693  016D                     l11562:	
  1694  016D  0021               	movlb	1	; select bank1
  1695  016E  0AB7               	incf	ReadOrWriteEE@i^(0+128),f
  1696  016F  1903               	skipnz
  1697  0170  0AB8               	incf	(ReadOrWriteEE@i+1)^(0+128),f
  1698  0171  0838               	movf	(ReadOrWriteEE@i+1)^(0+128),w
  1699  0172  3A80               	xorlw	128
  1700  0173  00FF               	movwf	127
  1701  0174  3080               	movlw	128
  1702  0175  027F               	subwf	127,w
  1703  0176  1D03               	skipz
  1704  0177  297A               	goto	u1565
  1705  0178  300A               	movlw	10
  1706  0179  0237               	subwf	ReadOrWriteEE@i^(0+128),w
  1707  017A                     u1565:	
  1708  017A  1803               	btfsc	3,0
  1709  017B  0008               	return
  1710  017C  294D               	goto	l11556
  1711  017D                     __end_of_ReadOrWriteEE:	
  1712  017D                     __ptext650:	
  1713 ;; =============== function _writeIntParam ends ============
  1714                           
  1715                           
  1716 ;; *************** function _readIntParam *****************
  1717 ;; Defined at:
  1718 ;;		line 6 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\kernel.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  addr            1    wreg     unsigned char 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  addr            1   45[BANK0 ] unsigned char 
  1723 ;;  value           2   43[BANK0 ] unsigned int 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  2   39[BANK0 ] unsigned int 
  1726 ;; Registers used:
  1727 ;;		wreg, status,2, status,0, pclath, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 1E/0
  1730 ;;		On exit  : 1F/0
  1731 ;;		Unchanged: FFFE0/0
  1732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1733 ;;      Params:         0       2       0       0
  1734 ;;      Locals:         0       3       0       0
  1735 ;;      Temps:          0       2       0       0
  1736 ;;      Totals:         0       7       0       0
  1737 ;;Total ram usage:        7 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    6
  1740 ;; This function calls:
  1741 ;;		_ReadEE
  1742 ;;		___lwtoft
  1743 ;;		___ftdiv
  1744 ;;		___fttol
  1745 ;; This function is called by:
  1746 ;;		_ReadOrWriteEE
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749  017D                     _readIntParam:	
  1750                           
  1751                           ; Regs used in _readIntParam: [wreg+status,2+status,0+pclath+cstack]
  1752                           ;readIntParam@addr stored from wreg
  1753  017D  0020               	movlb	0	; select bank0
  1754  017E  00CD               	movwf	readIntParam@addr
  1755                           
  1756                           ;kernel.c: 7: unsigned int value = 0;
  1757  017F  01CB               	clrf	readIntParam@value
  1758  0180  01CC               	clrf	readIntParam@value+1
  1759                           
  1760                           ;kernel.c: 8: value += (unsigned int)ReadEE(addr);
  1761  0181  084D               	movf	readIntParam@addr,w
  1762  0182  21B7  3180         	fcall	_ReadEE
  1763  0184  0020               	movlb	0	; select bank0
  1764  0185  07CB               	addwf	readIntParam@value,f
  1765  0186  1803               	skipnc
  1766  0187  0ACC               	incf	readIntParam@value+1,f
  1767                           
  1768                           ;kernel.c: 9: value += (((unsigned int)ReadEE(addr+1))<<8);
  1769  0188  0A4D               	incf	readIntParam@addr,w
  1770  0189  21B7  3180         	fcall	_ReadEE
  1771  018B  0020               	movlb	0	; select bank0
  1772  018C  00C9               	movwf	??_readIntParam
  1773  018D  01CA               	clrf	??_readIntParam+1
  1774  018E  3008               	movlw	8
  1775  018F                     u1535:	
  1776  018F  35C9               	lslf	??_readIntParam,f
  1777  0190  0DCA               	rlf	??_readIntParam+1,f
  1778  0191  0B89               	decfsz	9,f
  1779  0192  298F               	goto	u1535
  1780  0193  0849               	movf	??_readIntParam,w
  1781  0194  07CB               	addwf	readIntParam@value,f
  1782  0195  084A               	movf	??_readIntParam+1,w
  1783  0196  3DCC               	addwfc	readIntParam@value+1,f
  1784                           
  1785                           ;kernel.c: 10: return (unsigned int)(value/2.3684f);
  1786  0197  084C               	movf	readIntParam@value+1,w
  1787  0198  00B6               	movwf	?___lwtoft+1
  1788  0199  084B               	movf	readIntParam@value,w
  1789  019A  00B5               	movwf	?___lwtoft
  1790  019B  21EE  3180         	fcall	___lwtoft
  1791  019D  0835               	movf	?___lwtoft,w
  1792  019E  00BB               	movwf	?___ftdiv+3
  1793  019F  0836               	movf	?___lwtoft+1,w
  1794  01A0  00BC               	movwf	?___ftdiv+4
  1795  01A1  0837               	movf	?___lwtoft+2,w
  1796  01A2  00BD               	movwf	?___ftdiv+5
  1797  01A3  3094               	movlw	148
  1798  01A4  00B8               	movwf	?___ftdiv
  1799  01A5  3017               	movlw	23
  1800  01A6  00B9               	movwf	?___ftdiv+1
  1801  01A7  3040               	movlw	64
  1802  01A8  00BA               	movwf	?___ftdiv+2
  1803  01A9  2269  3180         	fcall	___ftdiv
  1804  01AB  0838               	movf	?___ftdiv,w
  1805  01AC  00A8               	movwf	?___fttol
  1806  01AD  0839               	movf	?___ftdiv+1,w
  1807  01AE  00A9               	movwf	?___fttol+1
  1808  01AF  083A               	movf	?___ftdiv+2,w
  1809  01B0  00AA               	movwf	?___fttol+2
  1810  01B1  2214               	fcall	___fttol
  1811  01B2  0829               	movf	?___fttol+1,w
  1812  01B3  00C8               	movwf	?_readIntParam+1
  1813  01B4  0828               	movf	?___fttol,w
  1814  01B5  00C7               	movwf	?_readIntParam
  1815  01B6  0008               	return
  1816  01B7                     __end_of_readIntParam:	
  1817  01B7                     __ptext661:	
  1818 ;; =============== function _WriteEE ends ============
  1819                           
  1820                           
  1821 ;; *************** function _ReadEE *****************
  1822 ;; Defined at:
  1823 ;;		line 31 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\mypic.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  addr            1    wreg     unsigned char 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  addr            1    4[COMMON] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      unsigned char 
  1830 ;; Registers used:
  1831 ;;		wreg
  1832 ;; Tracked objects:
  1833 ;;		On entry : 1F/0
  1834 ;;		On exit  : 1F/3
  1835 ;;		Unchanged: FFFE0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1837 ;;      Params:         0       0       0       0
  1838 ;;      Locals:         1       0       0       0
  1839 ;;      Temps:          0       0       0       0
  1840 ;;      Totals:         1       0       0       0
  1841 ;;Total ram usage:        1 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    4
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_readIntParam
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850  01B7                     _ReadEE:	
  1851                           
  1852                           ; Regs used in _ReadEE: [wreg]
  1853                           ;ReadEE@addr stored from wreg
  1854  01B7  00F4               	movwf	ReadEE@addr
  1855  01B8                     l8763:	
  1856                           ;mypic.c: 32: while(RD == 1);
  1857                           
  1858  01B8  0023               	movlb	3	; select bank3
  1859  01B9  1815               	btfsc	21,0
  1860  01BA  29B8               	goto	l8763
  1861                           
  1862                           ;mypic.c: 33: EEADRL = addr;
  1863  01BB  0874               	movf	ReadEE@addr,w
  1864  01BC  0091               	movwf	17	;volatile
  1865                           
  1866                           ;mypic.c: 34: EEPGD = 0;
  1867  01BD  1395               	bcf	21,7
  1868                           
  1869                           ;mypic.c: 35: CFGS = 0;
  1870  01BE  1315               	bcf	21,6
  1871                           
  1872                           ;mypic.c: 36: RD = 1;
  1873  01BF  1415               	bsf	21,0
  1874  01C0                     l8766:	
  1875                           ;mypic.c: 37: while(RD == 1);
  1876                           
  1877  01C0  1815               	btfsc	21,0
  1878  01C1  29C0               	goto	l8766
  1879                           
  1880                           ;mypic.c: 38: return EEDATL;
  1881  01C2  0813               	movf	19,w	;volatile
  1882  01C3  0008               	return
  1883  01C4                     __end_of_ReadEE:	
  1884  01C4                     __ptext649:	
  1885 ;; =============== function _ReadOrWriteEE ends ============
  1886                           
  1887                           
  1888 ;; *************** function _writeIntParam *****************
  1889 ;; Defined at:
  1890 ;;		line 12 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\kernel.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  value           2   39[BANK0 ] unsigned int 
  1893 ;;  addr            1   41[BANK0 ] unsigned char 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  data            2   42[BANK0 ] unsigned int 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;		None               void
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0, pclath, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 1F/0
  1902 ;;		On exit  : 1F/3
  1903 ;;		Unchanged: FFFE0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1905 ;;      Params:         0       3       0       0
  1906 ;;      Locals:         0       2       0       0
  1907 ;;      Temps:          0       0       0       0
  1908 ;;      Totals:         0       5       0       0
  1909 ;;Total ram usage:        5 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    6
  1912 ;; This function calls:
  1913 ;;		___lwtoft
  1914 ;;		___ftmul
  1915 ;;		___fttol
  1916 ;;		_WriteEE
  1917 ;; This function is called by:
  1918 ;;		_ReadOrWriteEE
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921  01C4                     _writeIntParam:	
  1922                           
  1923                           ;kernel.c: 13: unsigned int data = (unsigned int)(value*2.3684f);
  1924                           
  1925                           ; Regs used in _writeIntParam: [wreg+status,2+status,0+pclath+cstack]
  1926  01C4  0848               	movf	writeIntParam@value+1,w
  1927  01C5  00B6               	movwf	?___lwtoft+1
  1928  01C6  0847               	movf	writeIntParam@value,w
  1929  01C7  00B5               	movwf	?___lwtoft
  1930  01C8  21EE  3180         	fcall	___lwtoft
  1931  01CA  0835               	movf	?___lwtoft,w
  1932  01CB  00BB               	movwf	?___ftmul+3
  1933  01CC  0836               	movf	?___lwtoft+1,w
  1934  01CD  00BC               	movwf	?___ftmul+4
  1935  01CE  0837               	movf	?___lwtoft+2,w
  1936  01CF  00BD               	movwf	?___ftmul+5
  1937  01D0  3094               	movlw	148
  1938  01D1  00B8               	movwf	?___ftmul
  1939  01D2  3017               	movlw	23
  1940  01D3  00B9               	movwf	?___ftmul+1
  1941  01D4  3040               	movlw	64
  1942  01D5  00BA               	movwf	?___ftmul+2
  1943  01D6  2305  3180         	fcall	___ftmul
  1944  01D8  0838               	movf	?___ftmul,w
  1945  01D9  00A8               	movwf	?___fttol
  1946  01DA  0839               	movf	?___ftmul+1,w
  1947  01DB  00A9               	movwf	?___fttol+1
  1948  01DC  083A               	movf	?___ftmul+2,w
  1949  01DD  00AA               	movwf	?___fttol+2
  1950  01DE  2214  3180         	fcall	___fttol
  1951  01E0  0829               	movf	?___fttol+1,w
  1952  01E1  00CB               	movwf	writeIntParam@data+1
  1953  01E2  0828               	movf	?___fttol,w
  1954  01E3  00CA               	movwf	writeIntParam@data
  1955                           
  1956                           ;kernel.c: 14: WriteEE( data&0xff, addr);
  1957  01E4  0849               	movf	writeIntParam@addr,w
  1958  01E5  00F4               	movwf	?_WriteEE
  1959  01E6  084A               	movf	writeIntParam@data,w
  1960  01E7  21FE  3180         	fcall	_WriteEE
  1961                           
  1962                           ;kernel.c: 15: WriteEE((data>>8)&0xff, addr+1);
  1963  01E9  0020               	movlb	0	; select bank0
  1964  01EA  0A49               	incf	writeIntParam@addr,w
  1965  01EB  00F4               	movwf	?_WriteEE
  1966  01EC  084B               	movf	writeIntParam@data+1,w
  1967  01ED  29FE               	ljmp	_WriteEE
  1968  01EE                     __end_of_writeIntParam:	
  1969  01EE                     __ptext653:	
  1970 ;; =============== function _API_LCD_INIT ends ============
  1971                           
  1972                           
  1973 ;; *************** function ___lwtoft *****************
  1974 ;; Defined at:
  1975 ;;		line 29 in file "C:\Program Files\HI-TECH Software\PICC\9.80\sources\lwtoft.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  c               2   21[BANK0 ] unsigned int 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  3   21[BANK0 ] float 
  1982 ;; Registers used:
  1983 ;;		wreg, status,2, status,0, pclath, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 1F/0
  1986 ;;		On exit  : 1F/0
  1987 ;;		Unchanged: FFFE0/0
  1988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1989 ;;      Params:         0       3       0       0
  1990 ;;      Locals:         0       0       0       0
  1991 ;;      Temps:          0       0       0       0
  1992 ;;      Totals:         0       3       0       0
  1993 ;;Total ram usage:        3 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    5
  1996 ;; This function calls:
  1997 ;;		___ftpack
  1998 ;; This function is called by:
  1999 ;;		_readIntParam
  2000 ;;		_writeIntParam
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003  01EE                     ___lwtoft:	
  2004                           
  2005                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2006  01EE  0835               	movf	___lwtoft@c,w
  2007  01EF  00A0               	movwf	?___ftpack
  2008  01F0  0836               	movf	___lwtoft@c+1,w
  2009  01F1  00A1               	movwf	?___ftpack+1
  2010  01F2  01A2               	clrf	?___ftpack+2
  2011  01F3  308E               	movlw	142
  2012  01F4  00A3               	movwf	?___ftpack+3
  2013  01F5  01A4               	clrf	?___ftpack+4
  2014  01F6  22CB               	fcall	___ftpack
  2015  01F7  0820               	movf	?___ftpack,w
  2016  01F8  00B5               	movwf	?___lwtoft
  2017  01F9  0821               	movf	?___ftpack+1,w
  2018  01FA  00B6               	movwf	?___lwtoft+1
  2019  01FB  0822               	movf	?___ftpack+2,w
  2020  01FC  00B7               	movwf	?___lwtoft+2
  2021  01FD  0008               	return
  2022  01FE                     __end_of___lwtoft:	
  2023  01FE                     __ptext660:	
  2024 ;; =============== function ___ftpack ends ============
  2025                           
  2026                           
  2027 ;; *************** function _WriteEE *****************
  2028 ;; Defined at:
  2029 ;;		line 12 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\mypic.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  data            1    wreg     unsigned char 
  2032 ;;  addr            1    4[COMMON] unsigned char 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  data            1    5[COMMON] unsigned char 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;		None               void
  2037 ;; Registers used:
  2038 ;;		wreg
  2039 ;; Tracked objects:
  2040 ;;		On entry : 1F/0
  2041 ;;		On exit  : 1F/3
  2042 ;;		Unchanged: FFFE0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2044 ;;      Params:         1       0       0       0
  2045 ;;      Locals:         1       0       0       0
  2046 ;;      Temps:          0       0       0       0
  2047 ;;      Totals:         2       0       0       0
  2048 ;;Total ram usage:        2 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    4
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_writeIntParam
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057  01FE                     _WriteEE:	
  2058                           
  2059                           ; Regs used in _WriteEE: [wreg]
  2060                           ;WriteEE@data stored from wreg
  2061  01FE  00F5               	movwf	WriteEE@data
  2062  01FF                     l8754:	
  2063                           ;mypic.c: 13: while(WR == 1);
  2064                           
  2065  01FF  0023               	movlb	3	; select bank3
  2066  0200  1895               	btfsc	21,1
  2067  0201  29FF               	goto	l8754
  2068                           
  2069                           ;mypic.c: 15: GIE = 0;
  2070  0202  138B               	bcf	11,7
  2071                           
  2072                           ;mypic.c: 16: EEADRL = addr;
  2073  0203  0874               	movf	WriteEE@addr,w
  2074  0204  0091               	movwf	17	;volatile
  2075                           
  2076                           ;mypic.c: 17: EEDATL = data;
  2077  0205  0875               	movf	WriteEE@data,w
  2078  0206  0093               	movwf	19	;volatile
  2079                           
  2080                           ;mypic.c: 18: EEPGD = 0;
  2081  0207  1395               	bcf	21,7
  2082                           
  2083                           ;mypic.c: 19: CFGS = 0;
  2084  0208  1315               	bcf	21,6
  2085                           
  2086                           ;mypic.c: 20: WREN = 1;
  2087  0209  1515               	bsf	21,2
  2088                           
  2089                           ;mypic.c: 21: EECON2 = 0x55;
  2090  020A  3055               	movlw	85
  2091  020B  0096               	movwf	22	;volatile
  2092                           
  2093                           ;mypic.c: 22: EECON2 = 0xaa;
  2094  020C  30AA               	movlw	170
  2095  020D  0096               	movwf	22	;volatile
  2096                           
  2097                           ;mypic.c: 23: WR = 1;
  2098  020E  1495               	bsf	21,1
  2099                           
  2100                           ;mypic.c: 24: GIE = 1;
  2101  020F  178B               	bsf	11,7
  2102  0210                     l8757:	
  2103                           ;mypic.c: 25: while(WR == 1);
  2104                           
  2105  0210  1895               	btfsc	21,1
  2106  0211  2A10               	goto	l8757
  2107                           
  2108                           ;mypic.c: 26: WREN = 0;
  2109  0212  1115               	bcf	21,2
  2110  0213  0008               	return
  2111  0214                     __end_of_WriteEE:	
  2112  0214                     __ptext658:	
  2113 ;; =============== function _system_state_init ends ============
  2114                           
  2115                           
  2116 ;; *************** function ___fttol *****************
  2117 ;; Defined at:
  2118 ;;		line 45 in file "C:\Program Files\HI-TECH Software\PICC\9.80\sources\fttol.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  f1              3    8[BANK0 ] float 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  lval            4   16[BANK0 ] unsigned long 
  2123 ;;  exp1            1   20[BANK0 ] unsigned char 
  2124 ;;  sign1           1   15[BANK0 ] unsigned char 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  4    8[BANK0 ] long 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0
  2129 ;; Tracked objects:
  2130 ;;		On entry : 1F/0
  2131 ;;		On exit  : 1F/0
  2132 ;;		Unchanged: FFFE0/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2134 ;;      Params:         0       4       0       0
  2135 ;;      Locals:         0       6       0       0
  2136 ;;      Temps:          0       3       0       0
  2137 ;;      Totals:         0      13       0       0
  2138 ;;Total ram usage:       13 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    4
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_readIntParam
  2145 ;;		_writeIntParam
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148  0214                     ___fttol:	
  2149                           
  2150                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2151  0214  2372  3180         	fcall	PL3	;call to abstracted procedure
  2152  0216  1003               	clrc
  2153  0217  0D2D               	rlf	??___fttol+1,w
  2154  0218  0D2E               	rlf	??___fttol+2,w
  2155  0219  00B4               	movwf	___fttol@exp1
  2156  021A  08B4               	movf	___fttol@exp1,f
  2157  021B  1D03               	skipz
  2158  021C  2A22               	goto	l11336
  2159  021D                     l11334:	
  2160  021D  01A8               	clrf	?___fttol
  2161  021E  01A9               	clrf	?___fttol+1
  2162  021F  01AA               	clrf	?___fttol+2
  2163  0220  01AB               	clrf	?___fttol+3
  2164  0221  0008               	return
  2165  0222                     l11336:	
  2166  0222  2372  3180         	fcall	PL3	;call to abstracted procedure
  2167  0224  3017               	movlw	23
  2168  0225                     u1365:	
  2169  0225  36AE               	lsrf	??___fttol+2,f
  2170  0226  0CAD               	rrf	??___fttol+1,f
  2171  0227  0CAC               	rrf	??___fttol,f
  2172  0228  0B89               	decfsz	9,f
  2173  0229  2A25               	goto	u1365
  2174  022A  082C               	movf	??___fttol,w
  2175  022B  00AF               	movwf	___fttol@sign1
  2176  022C  17A9               	bsf	___fttol@f1+1,7
  2177  022D  01AA               	clrf	___fttol@f1+2
  2178  022E  0828               	movf	___fttol@f1,w
  2179  022F  00B0               	movwf	___fttol@lval
  2180  0230  0829               	movf	___fttol@f1+1,w
  2181  0231  00B1               	movwf	___fttol@lval+1
  2182  0232  082A               	movf	___fttol@f1+2,w
  2183  0233  00B2               	movwf	___fttol@lval+2
  2184  0234  01B3               	clrf	___fttol@lval+3
  2185  0235  308E               	movlw	142
  2186  0236  02B4               	subwf	___fttol@exp1,f
  2187  0237  1FB4               	btfss	___fttol@exp1,7
  2188  0238  2A45               	goto	l11356
  2189  0239  0834               	movf	___fttol@exp1,w
  2190  023A  3A80               	xorlw	128
  2191  023B  3E8F               	addlw	143
  2192  023C  1C03               	btfss	3,0
  2193  023D  2A1D               	goto	l11334
  2194  023E                     l11352:	
  2195  023E  36B3               	lsrf	___fttol@lval+3,f
  2196  023F  0CB2               	rrf	___fttol@lval+2,f
  2197  0240  0CB1               	rrf	___fttol@lval+1,f
  2198  0241  0CB0               	rrf	___fttol@lval,f
  2199  0242  0FB4               	incfsz	___fttol@exp1,f
  2200  0243  2A3E               	goto	l11352
  2201  0244  2A52               	goto	l11362
  2202  0245                     l11356:	
  2203  0245  3018               	movlw	24
  2204  0246  0234               	subwf	___fttol@exp1,w
  2205  0247  1803               	btfsc	3,0
  2206  0248  2A1D               	goto	l11334
  2207  0249                     l9237:	
  2208  0249  08B4               	movf	___fttol@exp1,f
  2209  024A  1903               	btfsc	3,2
  2210  024B  2A52               	goto	l11362
  2211  024C  35B0               	lslf	___fttol@lval,f
  2212  024D  0DB1               	rlf	___fttol@lval+1,f
  2213  024E  0DB2               	rlf	___fttol@lval+2,f
  2214  024F  0DB3               	rlf	___fttol@lval+3,f
  2215  0250  03B4               	decf	___fttol@exp1,f
  2216  0251  2A49               	goto	l9237
  2217  0252                     l11362:	
  2218  0252  082F               	movf	___fttol@sign1,w
  2219  0253  1903               	btfsc	3,2
  2220  0254  2A60               	goto	l11366
  2221  0255  09B0               	comf	___fttol@lval,f
  2222  0256  09B1               	comf	___fttol@lval+1,f
  2223  0257  09B2               	comf	___fttol@lval+2,f
  2224  0258  09B3               	comf	___fttol@lval+3,f
  2225  0259  0AB0               	incf	___fttol@lval,f
  2226  025A  1903               	skipnz
  2227  025B  0AB1               	incf	___fttol@lval+1,f
  2228  025C  1903               	skipnz
  2229  025D  0AB2               	incf	___fttol@lval+2,f
  2230  025E  1903               	skipnz
  2231  025F  0AB3               	incf	___fttol@lval+3,f
  2232  0260                     l11366:	
  2233  0260  0833               	movf	___fttol@lval+3,w
  2234  0261  00AB               	movwf	?___fttol+3
  2235  0262  0832               	movf	___fttol@lval+2,w
  2236  0263  00AA               	movwf	?___fttol+2
  2237  0264  0831               	movf	___fttol@lval+1,w
  2238  0265  00A9               	movwf	?___fttol+1
  2239  0266  0830               	movf	___fttol@lval,w
  2240  0267  00A8               	movwf	?___fttol
  2241  0268  0008               	return
  2242  0269                     __end_of___fttol:	
  2243  0269                     __ptext655:	
  2244 ;; =============== function ___ftmul ends ============
  2245                           
  2246                           
  2247 ;; *************** function ___ftdiv *****************
  2248 ;; Defined at:
  2249 ;;		line 50 in file "C:\Program Files\HI-TECH Software\PICC\9.80\sources\ftdiv.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  f2              3   24[BANK0 ] float 
  2252 ;;  f1              3   27[BANK0 ] float 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;  f3              3   34[BANK0 ] float 
  2255 ;;  sign            1   38[BANK0 ] unsigned char 
  2256 ;;  exp             1   37[BANK0 ] unsigned char 
  2257 ;;  cntr            1   33[BANK0 ] unsigned char 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  3   24[BANK0 ] float 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0, pclath, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 1F/0
  2264 ;;		On exit  : 1F/0
  2265 ;;		Unchanged: FFFE0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2267 ;;      Params:         0       6       0       0
  2268 ;;      Locals:         0       6       0       0
  2269 ;;      Temps:          0       3       0       0
  2270 ;;      Totals:         0      15       0       0
  2271 ;;Total ram usage:       15 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    5
  2274 ;; This function calls:
  2275 ;;		___ftpack
  2276 ;; This function is called by:
  2277 ;;		_readIntParam
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280  0269                     ___ftdiv:	
  2281                           
  2282                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2283  0269  083B               	movf	___ftdiv@f1,w
  2284  026A  00BE               	movwf	??___ftdiv
  2285  026B  083C               	movf	___ftdiv@f1+1,w
  2286  026C  00BF               	movwf	??___ftdiv+1
  2287  026D  083D               	movf	___ftdiv@f1+2,w
  2288  026E  00C0               	movwf	??___ftdiv+2
  2289  026F  1003               	clrc
  2290  0270  0D3F               	rlf	??___ftdiv+1,w
  2291  0271  0D40               	rlf	??___ftdiv+2,w
  2292  0272  00C5               	movwf	___ftdiv@exp
  2293  0273  08C5               	movf	___ftdiv@exp,f
  2294  0274  1D03               	skipz
  2295  0275  2A7A               	goto	l11426
  2296  0276  01B8               	clrf	?___ftdiv
  2297  0277  01B9               	clrf	?___ftdiv+1
  2298  0278  01BA               	clrf	?___ftdiv+2
  2299  0279  0008               	return
  2300  027A                     l11426:	
  2301  027A  0838               	movf	___ftdiv@f2,w
  2302  027B  00BE               	movwf	??___ftdiv
  2303  027C  0839               	movf	___ftdiv@f2+1,w
  2304  027D  00BF               	movwf	??___ftdiv+1
  2305  027E  083A               	movf	___ftdiv@f2+2,w
  2306  027F  00C0               	movwf	??___ftdiv+2
  2307  0280  1003               	clrc
  2308  0281  0D3F               	rlf	??___ftdiv+1,w
  2309  0282  0D40               	rlf	??___ftdiv+2,w
  2310  0283  00C6               	movwf	___ftdiv@sign
  2311  0284  08C6               	movf	___ftdiv@sign,f
  2312  0285  1D03               	skipz
  2313  0286  2A8B               	goto	l9210
  2314  0287  01B8               	clrf	?___ftdiv
  2315  0288  01B9               	clrf	?___ftdiv+1
  2316  0289  01BA               	clrf	?___ftdiv+2
  2317  028A  0008               	return
  2318  028B                     l9210:	
  2319  028B  01C2               	clrf	___ftdiv@f3
  2320  028C  01C3               	clrf	___ftdiv@f3+1
  2321  028D  01C4               	clrf	___ftdiv@f3+2
  2322  028E  3089               	movlw	137
  2323  028F  0746               	addwf	___ftdiv@sign,w
  2324  0290  00BE               	movwf	??___ftdiv
  2325  0291  02C5               	subwf	___ftdiv@exp,f
  2326  0292  083D               	movf	___ftdiv@f1+2,w
  2327  0293  00C6               	movwf	___ftdiv@sign
  2328  0294  083A               	movf	___ftdiv@f2+2,w
  2329  0295  06C6               	xorwf	___ftdiv@sign,f
  2330  0296  3080               	movlw	128
  2331  0297  05C6               	andwf	___ftdiv@sign,f
  2332  0298  17BC               	bsf	___ftdiv@f1+1,7
  2333  0299  01BD               	clrf	___ftdiv@f1+2
  2334  029A  17B9               	bsf	___ftdiv@f2+1,7
  2335  029B  01BA               	clrf	___ftdiv@f2+2
  2336  029C  3018               	movlw	24
  2337  029D  00C1               	movwf	___ftdiv@cntr
  2338  029E                     l11450:	
  2339  029E  35C2               	lslf	___ftdiv@f3,f
  2340  029F  0DC3               	rlf	___ftdiv@f3+1,f
  2341  02A0  0DC4               	rlf	___ftdiv@f3+2,f
  2342  02A1  083A               	movf	___ftdiv@f2+2,w
  2343  02A2  023D               	subwf	___ftdiv@f1+2,w
  2344  02A3  1D03               	skipz
  2345  02A4  2AAB               	goto	u1455
  2346  02A5  0839               	movf	___ftdiv@f2+1,w
  2347  02A6  023C               	subwf	___ftdiv@f1+1,w
  2348  02A7  1D03               	skipz
  2349  02A8  2AAB               	goto	u1455
  2350  02A9  0838               	movf	___ftdiv@f2,w
  2351  02AA  023B               	subwf	___ftdiv@f1,w
  2352  02AB                     u1455:	
  2353  02AB  1C03               	skipc
  2354  02AC  2AB4               	goto	l11456
  2355  02AD  0838               	movf	___ftdiv@f2,w
  2356  02AE  02BB               	subwf	___ftdiv@f1,f
  2357  02AF  0839               	movf	___ftdiv@f2+1,w
  2358  02B0  3BBC               	subwfb	___ftdiv@f1+1,f
  2359  02B1  083A               	movf	___ftdiv@f2+2,w
  2360  02B2  3BBD               	subwfb	___ftdiv@f1+2,f
  2361  02B3  1442               	bsf	___ftdiv@f3,0
  2362  02B4                     l11456:	
  2363  02B4  35BB               	lslf	___ftdiv@f1,f
  2364  02B5  0DBC               	rlf	___ftdiv@f1+1,f
  2365  02B6  0DBD               	rlf	___ftdiv@f1+2,f
  2366  02B7  0BC1               	decfsz	___ftdiv@cntr,f
  2367  02B8  2A9E               	goto	l11450
  2368  02B9  0842               	movf	___ftdiv@f3,w
  2369  02BA  00A0               	movwf	?___ftpack
  2370  02BB  0843               	movf	___ftdiv@f3+1,w
  2371  02BC  00A1               	movwf	?___ftpack+1
  2372  02BD  0844               	movf	___ftdiv@f3+2,w
  2373  02BE  00A2               	movwf	?___ftpack+2
  2374  02BF  0845               	movf	___ftdiv@exp,w
  2375  02C0  00A3               	movwf	?___ftpack+3
  2376  02C1  0846               	movf	___ftdiv@sign,w
  2377  02C2  00A4               	movwf	?___ftpack+4
  2378  02C3  22CB               	fcall	___ftpack
  2379  02C4  0820               	movf	?___ftpack,w
  2380  02C5  00B8               	movwf	?___ftdiv
  2381  02C6  0821               	movf	?___ftpack+1,w
  2382  02C7  00B9               	movwf	?___ftdiv+1
  2383  02C8  0822               	movf	?___ftpack+2,w
  2384  02C9  00BA               	movwf	?___ftdiv+2
  2385  02CA  0008               	return
  2386  02CB                     __end_of___ftdiv:	
  2387  02CB                     __ptext659:	
  2388 ;; =============== function ___fttol ends ============
  2389                           
  2390                           
  2391 ;; *************** function ___ftpack *****************
  2392 ;; Defined at:
  2393 ;;		line 63 in file "C:\Program Files\HI-TECH Software\PICC\9.80\sources\float.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  arg             3    0[BANK0 ] unsigned um
  2396 ;;  exp             1    3[BANK0 ] unsigned char 
  2397 ;;  sign            1    4[BANK0 ] unsigned char 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  3    0[BANK0 ] float 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0
  2404 ;; Tracked objects:
  2405 ;;		On entry : 1F/0
  2406 ;;		On exit  : 1F/0
  2407 ;;		Unchanged: FFFE0/0
  2408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2409 ;;      Params:         0       5       0       0
  2410 ;;      Locals:         0       0       0       0
  2411 ;;      Temps:          0       3       0       0
  2412 ;;      Totals:         0       8       0       0
  2413 ;;Total ram usage:        8 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    4
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		___ftdiv
  2420 ;;		___ftmul
  2421 ;;		___lwtoft
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424  02CB                     ___ftpack:	
  2425                           
  2426                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2427  02CB  0823               	movf	___ftpack@exp,w
  2428  02CC  1903               	btfsc	3,2
  2429  02CD  2AD3               	goto	l11308
  2430  02CE  0822               	movf	___ftpack@arg+2,w
  2431  02CF  0421               	iorwf	___ftpack@arg+1,w
  2432  02D0  0420               	iorwf	___ftpack@arg,w
  2433  02D1  1D03               	skipz
  2434  02D2  2ADB               	goto	l11314
  2435  02D3                     l11308:	
  2436  02D3  01A0               	clrf	?___ftpack
  2437  02D4  01A1               	clrf	?___ftpack+1
  2438  02D5  01A2               	clrf	?___ftpack+2
  2439  02D6  0008               	return
  2440  02D7                     l11312:	
  2441  02D7  0AA3               	incf	___ftpack@exp,f
  2442  02D8  36A2               	lsrf	___ftpack@arg+2,f
  2443  02D9  0CA1               	rrf	___ftpack@arg+1,f
  2444  02DA  0CA0               	rrf	___ftpack@arg,f
  2445  02DB                     l11314:	
  2446  02DB  30FE               	movlw	254
  2447  02DC  0522               	andwf	___ftpack@arg+2,w
  2448  02DD  1903               	btfsc	3,2
  2449  02DE  2AE9               	goto	l11318
  2450  02DF  2AD7               	goto	l11312
  2451  02E0                     l11316:	
  2452  02E0  0AA3               	incf	___ftpack@exp,f
  2453  02E1  0AA0               	incf	___ftpack@arg,f
  2454  02E2  1903               	skipnz
  2455  02E3  0AA1               	incf	___ftpack@arg+1,f
  2456  02E4  1903               	skipnz
  2457  02E5  0AA2               	incf	___ftpack@arg+2,f
  2458  02E6  36A2               	lsrf	___ftpack@arg+2,f
  2459  02E7  0CA1               	rrf	___ftpack@arg+1,f
  2460  02E8  0CA0               	rrf	___ftpack@arg,f
  2461  02E9                     l11318:	
  2462  02E9  30FF               	movlw	255
  2463  02EA  0522               	andwf	___ftpack@arg+2,w
  2464  02EB  1903               	btfsc	3,2
  2465  02EC  2AF2               	goto	l11322
  2466  02ED  2AE0               	goto	l11316
  2467  02EE                     l11320:	
  2468  02EE  03A3               	decf	___ftpack@exp,f
  2469  02EF  35A0               	lslf	___ftpack@arg,f
  2470  02F0  0DA1               	rlf	___ftpack@arg+1,f
  2471  02F1  0DA2               	rlf	___ftpack@arg+2,f
  2472  02F2                     l11322:	
  2473  02F2  1FA1               	btfss	___ftpack@arg+1,7
  2474  02F3  2AEE               	goto	l11320
  2475  02F4  1C23               	btfss	___ftpack@exp,0
  2476  02F5  13A1               	bcf	___ftpack@arg+1,7
  2477  02F6  36A3               	lsrf	___ftpack@exp,f
  2478  02F7  0823               	movf	___ftpack@exp,w
  2479  02F8  00A7               	movwf	??___ftpack+2
  2480  02F9  01A6               	clrf	??___ftpack+1
  2481  02FA  01A5               	clrf	??___ftpack
  2482  02FB  0825               	movf	??___ftpack,w
  2483  02FC  04A0               	iorwf	___ftpack@arg,f
  2484  02FD  0826               	movf	??___ftpack+1,w
  2485  02FE  04A1               	iorwf	___ftpack@arg+1,f
  2486  02FF  0827               	movf	??___ftpack+2,w
  2487  0300  04A2               	iorwf	___ftpack@arg+2,f
  2488  0301  0824               	movf	___ftpack@sign,w
  2489  0302  1D03               	skipz
  2490  0303  17A2               	bsf	___ftpack@arg+2,7
  2491  0304  0008               	return
  2492  0305                     __end_of___ftpack:	
  2493  0305                     __ptext654:	
  2494 ;; =============== function ___lwtoft ends ============
  2495                           
  2496                           
  2497 ;; *************** function ___ftmul *****************
  2498 ;; Defined at:
  2499 ;;		line 52 in file "C:\Program Files\HI-TECH Software\PICC\9.80\sources\ftmul.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  f1              3   24[BANK0 ] float 
  2502 ;;  f2              3   27[BANK0 ] float 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  f3_as_produc    3   34[BANK0 ] unsigned um
  2505 ;;  sign            1   38[BANK0 ] unsigned char 
  2506 ;;  cntr            1   37[BANK0 ] unsigned char 
  2507 ;;  exp             1   33[BANK0 ] unsigned char 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  3   24[BANK0 ] float 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0, pclath, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 1F/0
  2514 ;;		On exit  : 1F/0
  2515 ;;		Unchanged: FFFE0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2517 ;;      Params:         0       6       0       0
  2518 ;;      Locals:         0       6       0       0
  2519 ;;      Temps:          0       3       0       0
  2520 ;;      Totals:         0      15       0       0
  2521 ;;Total ram usage:       15 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    5
  2524 ;; This function calls:
  2525 ;;		___ftpack
  2526 ;; This function is called by:
  2527 ;;		_writeIntParam
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530  0305                     ___ftmul:	
  2531                           
  2532                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2533  0305  0838               	movf	___ftmul@f1,w
  2534  0306  00BE               	movwf	??___ftmul
  2535  0307  0839               	movf	___ftmul@f1+1,w
  2536  0308  00BF               	movwf	??___ftmul+1
  2537  0309  083A               	movf	___ftmul@f1+2,w
  2538  030A  00C0               	movwf	??___ftmul+2
  2539  030B  1003               	clrc
  2540  030C  0D3F               	rlf	??___ftmul+1,w
  2541  030D  0D40               	rlf	??___ftmul+2,w
  2542  030E  00C1               	movwf	___ftmul@exp
  2543  030F  08C1               	movf	___ftmul@exp,f
  2544  0310  1D03               	skipz
  2545  0311  2B16               	goto	l11470
  2546  0312  01B8               	clrf	?___ftmul
  2547  0313  01B9               	clrf	?___ftmul+1
  2548  0314  01BA               	clrf	?___ftmul+2
  2549  0315  0008               	return
  2550  0316                     l11470:	
  2551  0316  083B               	movf	___ftmul@f2,w
  2552  0317  00BE               	movwf	??___ftmul
  2553  0318  083C               	movf	___ftmul@f2+1,w
  2554  0319  00BF               	movwf	??___ftmul+1
  2555  031A  083D               	movf	___ftmul@f2+2,w
  2556  031B  00C0               	movwf	??___ftmul+2
  2557  031C  1003               	clrc
  2558  031D  0D3F               	rlf	??___ftmul+1,w
  2559  031E  0D40               	rlf	??___ftmul+2,w
  2560  031F  00C6               	movwf	___ftmul@sign
  2561  0320  08C6               	movf	___ftmul@sign,f
  2562  0321  1D03               	skipz
  2563  0322  2B27               	goto	l11476
  2564  0323  01B8               	clrf	?___ftmul
  2565  0324  01B9               	clrf	?___ftmul+1
  2566  0325  01BA               	clrf	?___ftmul+2
  2567  0326  0008               	return
  2568  0327                     l11476:	
  2569  0327  0846               	movf	___ftmul@sign,w
  2570  0328  3E7B               	addlw	123
  2571  0329  07C1               	addwf	___ftmul@exp,f
  2572  032A  083A               	movf	___ftmul@f1+2,w
  2573  032B  00C6               	movwf	___ftmul@sign
  2574  032C  083D               	movf	___ftmul@f2+2,w
  2575  032D  06C6               	xorwf	___ftmul@sign,f
  2576  032E  3080               	movlw	128
  2577  032F  05C6               	andwf	___ftmul@sign,f
  2578  0330  17B9               	bsf	___ftmul@f1+1,7
  2579  0331  17BC               	bsf	___ftmul@f2+1,7
  2580  0332  30FF               	movlw	255
  2581  0333  05BB               	andwf	___ftmul@f2,f
  2582  0334  05BC               	andwf	___ftmul@f2+1,f
  2583  0335  01BD               	clrf	___ftmul@f2+2
  2584  0336  01C2               	clrf	___ftmul@f3_as_product
  2585  0337  01C3               	clrf	___ftmul@f3_as_product+1
  2586  0338  01C4               	clrf	___ftmul@f3_as_product+2
  2587  0339  3007               	movlw	7
  2588  033A  00C5               	movwf	___ftmul@cntr
  2589  033B                     l11494:	
  2590  033B  1C38               	btfss	___ftmul@f1,0
  2591  033C  2B40               	goto	l11498
  2592  033D  083B               	movf	___ftmul@f2,w
  2593  033E  2379  3180         	fcall	PL4	;call to abstracted procedure
  2594  0340                     l11498:	
  2595  0340  36BA               	lsrf	___ftmul@f1+2,f
  2596  0341  0CB9               	rrf	___ftmul@f1+1,f
  2597  0342  0CB8               	rrf	___ftmul@f1,f
  2598  0343  35BB               	lslf	___ftmul@f2,f
  2599  0344  0DBC               	rlf	___ftmul@f2+1,f
  2600  0345  0DBD               	rlf	___ftmul@f2+2,f
  2601  0346  0BC5               	decfsz	___ftmul@cntr,f
  2602  0347  2B3B               	goto	l11494
  2603  0348  3009               	movlw	9
  2604  0349  00C5               	movwf	___ftmul@cntr
  2605  034A                     l11506:	
  2606  034A  1C38               	btfss	___ftmul@f1,0
  2607  034B  2B4F               	goto	l11510
  2608  034C  083B               	movf	___ftmul@f2,w
  2609  034D  2379  3180         	fcall	PL4	;call to abstracted procedure
  2610  034F                     l11510:	
  2611  034F  36BA               	lsrf	___ftmul@f1+2,f
  2612  0350  0CB9               	rrf	___ftmul@f1+1,f
  2613  0351  0CB8               	rrf	___ftmul@f1,f
  2614  0352  36C4               	lsrf	___ftmul@f3_as_product+2,f
  2615  0353  0CC3               	rrf	___ftmul@f3_as_product+1,f
  2616  0354  0CC2               	rrf	___ftmul@f3_as_product,f
  2617  0355  0BC5               	decfsz	___ftmul@cntr,f
  2618  0356  2B4A               	goto	l11506
  2619  0357  0842               	movf	___ftmul@f3_as_product,w
  2620  0358  00A0               	movwf	?___ftpack
  2621  0359  0843               	movf	___ftmul@f3_as_product+1,w
  2622  035A  00A1               	movwf	?___ftpack+1
  2623  035B  0844               	movf	___ftmul@f3_as_product+2,w
  2624  035C  00A2               	movwf	?___ftpack+2
  2625  035D  0841               	movf	___ftmul@exp,w
  2626  035E  00A3               	movwf	?___ftpack+3
  2627  035F  0846               	movf	___ftmul@sign,w
  2628  0360  00A4               	movwf	?___ftpack+4
  2629  0361  22CB               	fcall	___ftpack
  2630  0362  0820               	movf	?___ftpack,w
  2631  0363  00B8               	movwf	?___ftmul
  2632  0364  0821               	movf	?___ftpack+1,w
  2633  0365  00B9               	movwf	?___ftmul+1
  2634  0366  0822               	movf	?___ftpack+2,w
  2635  0367  00BA               	movwf	?___ftmul+2
  2636  0368  0008               	return
  2637  0369                     __end_of___ftmul:	
  2638  0369                     PL2:	
  2639  0369  0021               	movlb	1	; select bank1
  2640  036A  3537               	lslf	ReadOrWriteEE@i^(0+128),w
  2641  036B  3EDA               	addlw	218
  2642  036C  0086               	movwf	6
  2643  036D  3020               	movlw	32
  2644  036E  1803               	skipnc
  2645  036F  0A89               	incf	9,f
  2646  0370  0087               	movwf	7
  2647  0371  0008               	return
  2648  0372                     PL3:	
  2649  0372  0828               	movf	___fttol@f1,w
  2650  0373  00AC               	movwf	??___fttol
  2651  0374  0829               	movf	___fttol@f1+1,w
  2652  0375  00AD               	movwf	??___fttol+1
  2653  0376  082A               	movf	___fttol@f1+2,w
  2654  0377  00AE               	movwf	??___fttol+2
  2655  0378  0008               	return
  2656  0379                     PL4:	
  2657  0379  07C2               	addwf	___ftmul@f3_as_product,f
  2658  037A  083C               	movf	___ftmul@f2+1,w
  2659  037B  3DC3               	addwfc	___ftmul@f3_as_product+1,f
  2660  037C  083D               	movf	___ftmul@f2+2,w
  2661  037D  3DC4               	addwfc	___ftmul@f3_as_product+2,f
  2662  037E  0008               	return
  2663  037F                     PL5:	
  2664  037F  30E8               	movlw	232
  2665  0380  00F4               	movwf	?_CTKSoftDelay
  2666  0381  3003               	movlw	3
  2667  0382  00F5               	movwf	?_CTKSoftDelay+1
  2668  0383  0008               	return
  2669                           
  2670                           	psect	bitbssCOMMON
  2671  03C8                     __pbitbssCOMMON:	
  2672  03C8                     _PWMFlag:	
  2673  03C8                     	ds	1
  2674                           
  2675                           	psect	bssCOMMON
  2676  0076                     __pbssCOMMON:	
  2677  0076                     _DutyRatio:	
  2678  0076                     	ds	1
  2679  0077                     _PwmCount:	
  2680  0077                     	ds	1
  2681  0078                     _lcd_state:	
  2682  0078                     	ds	1
  2683                           
  2684                           	psect	bssBANK0
  2685  0067                     __pbssBANK0:	
  2686  0067                     _PWM_CONTROL_TIMEOUT:	
  2687  0067                     	ds	4
  2688  006B                     _HW_BATTERY_TYPE:	
  2689  006B                     	ds	1
  2690  006C                     _OS_CurrentState:	
  2691  006C                     	ds	1
  2692  006D                     _PWM_CONTROL_FLAG:	
  2693  006D                     	ds	1
  2694                           
  2695                           	psect	dataBANK0
  2696  0050                     __pdataBANK0:	
  2697  0050                     _KeyEvent_PendKeyCode:	
  2698  0050                     	ds	1
  2699  0051                     _Battery_12V:	
  2700  0051                     	ds	22
  2701                           
  2702                           	psect	dataBANK1
  2703  00A0                     __pdataBANK1:	
  2704  00A0                     _Battery_24V:	
  2705  00A0                     	ds	22
  2706                           
  2707                           	psect	inittext
  2708  043F                     init_ram:	
  2709  043F  00FE               	movwf	126
  2710  0440                     initloop:	
  2711  0440  0012               	moviw fsr0++
  2712  0441  001E               	movwi fsr1++
  2713  0442  3001               	movlw	1
  2714  0443  02FE               	subwf	126,f
  2715  0444  3000               	movlw	0
  2716  0445  3BFF               	subwfb	127,f
  2717  0446  087F               	movf	127,w
  2718  0447  047E               	iorwf	126,w
  2719  0448  1903               	btfsc	3,2
  2720  0449  3400               	retlw	0
  2721  044A  2C40               	goto	initloop
  2722                           
  2723                           	psect	cstackBANK1
  2724  00B6                     __pcstackBANK1:	
  2725  00B6                     ReadOrWriteEE@startAddr:	
  2726                           
  2727                           ; 1 bytes @ 0x0
  2728  00B6                     	ds	1
  2729  00B7                     ReadOrWriteEE@i:	
  2730                           
  2731                           ; 2 bytes @ 0x1
  2732  00B7                     	ds	2
  2733                           
  2734                           	psect	cstackCOMMON
  2735  0070                     __pcstackCOMMON:	
  2736  0070                     ?_API_LCD_INIT:	
  2737  0070                     ?_API_LCD_CLEAR:	
  2738                           ; 0 bytes @ 0x0
  2739                           
  2740  0070                     ?_LoadParamFromEPPROM:	
  2741                           ; 0 bytes @ 0x0
  2742                           
  2743  0070                     ?_system_state_init:	
  2744                           ; 0 bytes @ 0x0
  2745                           
  2746  0070                     ?_handlerKeyEventInput:	
  2747                           ; 0 bytes @ 0x0
  2748                           
  2749  0070                     ?_setPWM:	
  2750                           ; 0 bytes @ 0x0
  2751                           
  2752  0070                     ??_setPWM:	
  2753                           ; 0 bytes @ 0x0
  2754                           
  2755  0070                     ?_openOrClosePWM:	
  2756                           ; 0 bytes @ 0x0
  2757                           
  2758  0070                     ?_handlerPWMInterrupt:	
  2759                           ; 0 bytes @ 0x0
  2760                           
  2761  0070                     ?_main:	
  2762                           ; 0 bytes @ 0x0
  2763                           
  2764  0070                     ?_ISR_Timer:	
  2765                           ; 0 bytes @ 0x0
  2766                           
  2767  0070                     ?_lcd_write_command:	
  2768                           ; 0 bytes @ 0x0
  2769                           
  2770  0070                     ?_ReadEE:	
  2771                           ; 0 bytes @ 0x0
  2772                           
  2773  0070                     setPWM@open:	
  2774                           ; 1 bytes @ 0x0
  2775                           
  2776  0070                     handlerKeyEventInput@keyCode:	
  2777                           ; 1 bytes @ 0x0
  2778                           
  2779                           
  2780                           ; 2 bytes @ 0x0
  2781  0070                     	ds	1
  2782  0071                     ??_openOrClosePWM:	
  2783  0071                     openOrClosePWM@open:	
  2784                           ; 0 bytes @ 0x1
  2785                           
  2786                           
  2787                           ; 1 bytes @ 0x1
  2788  0071                     	ds	1
  2789  0072                     ??_handlerKeyEventInput:	
  2790  0072                     ??_handlerPWMInterrupt:	
  2791                           ; 0 bytes @ 0x2
  2792                           
  2793                           
  2794                           ; 0 bytes @ 0x2
  2795  0072                     	ds	2
  2796  0074                     ?_CTKSoftDelay:	
  2797  0074                     ??_ReadEE:	
  2798                           ; 0 bytes @ 0x4
  2799                           
  2800  0074                     ?_WriteEE:	
  2801                           ; 0 bytes @ 0x4
  2802                           
  2803  0074                     ?_tranform_OS_State:	
  2804                           ; 0 bytes @ 0x4
  2805                           
  2806  0074                     ??_ISR_Timer:	
  2807                           ; 0 bytes @ 0x4
  2808                           
  2809  0074                     ??___lwtoft:	
  2810                           ; 0 bytes @ 0x4
  2811                           
  2812  0074                     WriteEE@addr:	
  2813                           ; 0 bytes @ 0x4
  2814                           
  2815  0074                     ReadEE@addr:	
  2816                           ; 1 bytes @ 0x4
  2817                           
  2818  0074                     tranform_OS_State@state:	
  2819                           ; 1 bytes @ 0x4
  2820                           
  2821  0074                     CTKSoftDelay@x:	
  2822                           ; 2 bytes @ 0x4
  2823                           
  2824                           
  2825                           ; 2 bytes @ 0x4
  2826  0074                     	ds	1
  2827  0075                     ??_WriteEE:	
  2828  0075                     WriteEE@data:	
  2829                           ; 0 bytes @ 0x5
  2830                           
  2831                           
  2832                           ; 1 bytes @ 0x5
  2833  0075                     	ds	1
  2834  0076                     ??_API_LCD_INIT:	
  2835  0076                     ??_API_LCD_CLEAR:	
  2836                           ; 0 bytes @ 0x6
  2837                           
  2838  0076                     ??_LoadParamFromEPPROM:	
  2839                           ; 0 bytes @ 0x6
  2840                           
  2841  0076                     ??_system_state_init:	
  2842                           ; 0 bytes @ 0x6
  2843                           
  2844  0076                     ??_CTKSoftDelay:	
  2845                           ; 0 bytes @ 0x6
  2846                           
  2847  0076                     ??_main:	
  2848                           ; 0 bytes @ 0x6
  2849                           
  2850  0076                     ??_lcd_write_command:	
  2851                           ; 0 bytes @ 0x6
  2852                           
  2853  0076                     ??_writeIntParam:	
  2854                           ; 0 bytes @ 0x6
  2855                           
  2856  0076                     ??_ReadOrWriteEE:	
  2857                           ; 0 bytes @ 0x6
  2858                           
  2859                           
  2860                           	psect	cstackBANK0
  2861  0020                     __pcstackBANK0:	
  2862                           ; 0 bytes @ 0x6
  2863                           
  2864  0020                     ??_tranform_OS_State:	
  2865  0020                     ?___ftpack:	
  2866                           ; 0 bytes @ 0x0
  2867                           
  2868  0020                     CTKSoftDelay@a:	
  2869                           ; 3 bytes @ 0x0
  2870                           
  2871  0020                     ___ftpack@arg:	
  2872                           ; 2 bytes @ 0x0
  2873                           
  2874                           
  2875                           ; 3 bytes @ 0x0
  2876  0020                     	ds	2
  2877  0022                     CTKSoftDelay@b:	
  2878                           
  2879                           ; 2 bytes @ 0x2
  2880  0022                     	ds	1
  2881  0023                     ___ftpack@exp:	
  2882                           
  2883                           ; 1 bytes @ 0x3
  2884  0023                     	ds	1
  2885  0024                     lcd_write_command@command:	
  2886  0024                     ___ftpack@sign:	
  2887                           ; 1 bytes @ 0x4
  2888                           
  2889                           
  2890                           ; 1 bytes @ 0x4
  2891  0024                     	ds	1
  2892  0025                     ??___ftpack:	
  2893                           
  2894                           ; 0 bytes @ 0x5
  2895  0025                     	ds	3
  2896  0028                     ?___fttol:	
  2897  0028                     ___fttol@f1:	
  2898                           ; 4 bytes @ 0x8
  2899                           
  2900                           
  2901                           ; 3 bytes @ 0x8
  2902  0028                     	ds	4
  2903  002C                     ??___fttol:	
  2904                           
  2905                           ; 0 bytes @ 0xC
  2906  002C                     	ds	3
  2907  002F                     ___fttol@sign1:	
  2908                           
  2909                           ; 1 bytes @ 0xF
  2910  002F                     	ds	1
  2911  0030                     ___fttol@lval:	
  2912                           
  2913                           ; 4 bytes @ 0x10
  2914  0030                     	ds	4
  2915  0034                     ___fttol@exp1:	
  2916                           
  2917                           ; 1 bytes @ 0x14
  2918  0034                     	ds	1
  2919  0035                     ?___lwtoft:	
  2920  0035                     ___lwtoft@c:	
  2921                           ; 3 bytes @ 0x15
  2922                           
  2923                           
  2924                           ; 2 bytes @ 0x15
  2925  0035                     	ds	3
  2926  0038                     ?___ftdiv:	
  2927  0038                     ?___ftmul:	
  2928                           ; 3 bytes @ 0x18
  2929                           
  2930  0038                     ___ftdiv@f2:	
  2931                           ; 3 bytes @ 0x18
  2932                           
  2933  0038                     ___ftmul@f1:	
  2934                           ; 3 bytes @ 0x18
  2935                           
  2936                           
  2937                           ; 3 bytes @ 0x18
  2938  0038                     	ds	3
  2939  003B                     ___ftdiv@f1:	
  2940  003B                     ___ftmul@f2:	
  2941                           ; 3 bytes @ 0x1B
  2942                           
  2943                           
  2944                           ; 3 bytes @ 0x1B
  2945  003B                     	ds	3
  2946  003E                     ??___ftdiv:	
  2947  003E                     ??___ftmul:	
  2948                           ; 0 bytes @ 0x1E
  2949                           
  2950                           
  2951                           ; 0 bytes @ 0x1E
  2952  003E                     	ds	3
  2953  0041                     ___ftdiv@cntr:	
  2954  0041                     ___ftmul@exp:	
  2955                           ; 1 bytes @ 0x21
  2956                           
  2957                           
  2958                           ; 1 bytes @ 0x21
  2959  0041                     	ds	1
  2960  0042                     ___ftdiv@f3:	
  2961  0042                     ___ftmul@f3_as_product:	
  2962                           ; 3 bytes @ 0x22
  2963                           
  2964                           
  2965                           ; 3 bytes @ 0x22
  2966  0042                     	ds	3
  2967  0045                     ___ftdiv@exp:	
  2968  0045                     ___ftmul@cntr:	
  2969                           ; 1 bytes @ 0x25
  2970                           
  2971                           
  2972                           ; 1 bytes @ 0x25
  2973  0045                     	ds	1
  2974  0046                     ___ftdiv@sign:	
  2975  0046                     ___ftmul@sign:	
  2976                           ; 1 bytes @ 0x26
  2977                           
  2978                           
  2979                           ; 1 bytes @ 0x26
  2980  0046                     	ds	1
  2981  0047                     ?_writeIntParam:	
  2982  0047                     ?_readIntParam:	
  2983                           ; 0 bytes @ 0x27
  2984                           
  2985  0047                     writeIntParam@value:	
  2986                           ; 2 bytes @ 0x27
  2987                           
  2988                           
  2989                           ; 2 bytes @ 0x27
  2990  0047                     	ds	2
  2991  0049                     ??_readIntParam:	
  2992  0049                     writeIntParam@addr:	
  2993                           ; 0 bytes @ 0x29
  2994                           
  2995                           
  2996                           ; 1 bytes @ 0x29
  2997  0049                     	ds	1
  2998  004A                     writeIntParam@data:	
  2999                           
  3000                           ; 2 bytes @ 0x2A
  3001  004A                     	ds	1
  3002  004B                     readIntParam@value:	
  3003                           
  3004                           ; 2 bytes @ 0x2B
  3005  004B                     	ds	2
  3006  004D                     readIntParam@addr:	
  3007                           
  3008                           ; 1 bytes @ 0x2D
  3009  004D                     	ds	1
  3010  004E                     ?_ReadOrWriteEE:	
  3011  004E                     ReadOrWriteEE@read:	
  3012                           ; 0 bytes @ 0x2E
  3013                           
  3014                           
  3015                           ; 2 bytes @ 0x2E
  3016  004E                     	ds	2
  3017                           
  3018                           	psect	intentry
  3019  0004                     __pintentry:	
  3020 ;; =============== function _tranform_OS_State ends ============
  3021                           
  3022                           
  3023 ;; *************** function _ISR_Timer *****************
  3024 ;; Defined at:
  3025 ;;		line 392 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\main.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;		None               void
  3032 ;; Registers used:
  3033 ;;		wreg, status,2, status,0, pclath, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 1F/0
  3037 ;;		Unchanged: FFE00/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3039 ;;      Params:         0       0       0       0
  3040 ;;      Locals:         0       0       0       0
  3041 ;;      Temps:          0       0       0       0
  3042 ;;      Totals:         0       0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    3
  3046 ;; This function calls:
  3047 ;;		_handlerKeyEventInput
  3048 ;;		_handlerPWMInterrupt
  3049 ;; This function is called by:
  3050 ;;		Interrupt level 1
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053  0004                     _ISR_Timer:	
  3054                           
  3055                           ; Regs used in _ISR_Timer: [wreg+status,2+status,0+pclath+cstack]
  3056  0004  3180               	pagesel	$
  3057                           
  3058                           ;main.c: 393: if(IOCBF3 && lcd_state != 0 && lcd_state != 1)
  3059  0005  0027               	movlb	7	; select bank7
  3060  0006  1D96               	btfss	22,3
  3061  0007  2819               	goto	i1l10866
  3062  0008  0878               	movf	_lcd_state,w
  3063  0009  1903               	btfsc	3,2
  3064  000A  2819               	goto	i1l10866
  3065  000B  0378               	decf	_lcd_state,w
  3066  000C  1903               	skipnz
  3067  000D  2819               	goto	i1l10866
  3068                           
  3069                           ;main.c: 394: {
  3070                           ;main.c: 396: if (RB3 == 0) {
  3071  000E  0020               	movlb	0	; select bank0
  3072  000F  198D               	btfsc	13,3
  3073  0010  2817               	goto	i1l10864
  3074                           
  3075                           ;main.c: 397: handlerKeyEventInput(3);
  3076  0011  3003               	movlw	3
  3077  0012  00F0               	movwf	?_handlerKeyEventInput
  3078  0013  01F1               	clrf	?_handlerKeyEventInput+1
  3079  0014  3183  23DC  3180   	fcall	_handlerKeyEventInput
  3080  0017                     i1l10864:	
  3081                           
  3082                           ;main.c: 398: }
  3083                           ;main.c: 399: IOCBF3 = 0;
  3084  0017  0027               	movlb	7	; select bank7
  3085  0018  1196               	bcf	22,3
  3086  0019                     i1l10866:	
  3087                           
  3088                           ;main.c: 400: }
  3089                           ;main.c: 401: if(IOCBF5 && lcd_state != 0 && lcd_state != 1)
  3090  0019  1E96               	btfss	22,5
  3091  001A  282C               	goto	i1l10878
  3092  001B  0878               	movf	_lcd_state,w
  3093  001C  1903               	btfsc	3,2
  3094  001D  282C               	goto	i1l10878
  3095  001E  0378               	decf	_lcd_state,w
  3096  001F  1903               	skipnz
  3097  0020  282C               	goto	i1l10878
  3098                           
  3099                           ;main.c: 402: {
  3100                           ;main.c: 403: if (RB5 == 0) {
  3101  0021  0020               	movlb	0	; select bank0
  3102  0022  1A8D               	btfsc	13,5
  3103  0023  282A               	goto	i1l10876
  3104                           
  3105                           ;main.c: 404: handlerKeyEventInput(4);
  3106  0024  3004               	movlw	4
  3107  0025  00F0               	movwf	?_handlerKeyEventInput
  3108  0026  01F1               	clrf	?_handlerKeyEventInput+1
  3109  0027  3183  23DC  3180   	fcall	_handlerKeyEventInput
  3110  002A                     i1l10876:	
  3111                           
  3112                           ;main.c: 405: }
  3113                           ;main.c: 406: IOCBF5 = 0;
  3114  002A  0027               	movlb	7	; select bank7
  3115  002B  1296               	bcf	22,5
  3116  002C                     i1l10878:	
  3117                           
  3118                           ;main.c: 407: }
  3119                           ;main.c: 409: if(IOCBF4)
  3120  002C  1E16               	btfss	22,4
  3121  002D  2839               	goto	i1l10886
  3122                           
  3123                           ;main.c: 410: {
  3124                           ;main.c: 412: if (RB4 == 0) {
  3125  002E  0020               	movlb	0	; select bank0
  3126  002F  1A0D               	btfsc	13,4
  3127  0030  2837               	goto	i1l10884
  3128                           
  3129                           ;main.c: 413: handlerKeyEventInput(2);
  3130  0031  3002               	movlw	2
  3131  0032  00F0               	movwf	?_handlerKeyEventInput
  3132  0033  01F1               	clrf	?_handlerKeyEventInput+1
  3133  0034  3183  23DC  3180   	fcall	_handlerKeyEventInput
  3134  0037                     i1l10884:	
  3135                           
  3136                           ;main.c: 414: }
  3137                           ;main.c: 416: IOCBF4 = 0;
  3138  0037  0027               	movlb	7	; select bank7
  3139  0038  1216               	bcf	22,4
  3140  0039                     i1l10886:	
  3141                           
  3142                           ;main.c: 420: {
  3143                           ;main.c: 421: OS_Time ++;
  3144  0039  0020               	movlb	0	; select bank0
  3145  003A  1C11               	btfss	17,0
  3146  003B  2841               	goto	i1l10892
  3147                           
  3148                           ;main.c: 422: TMR1IF = 0;
  3149  003C  1011               	bcf	17,0
  3150                           
  3151                           ;main.c: 423: TMR1H = (65536 - (100000 / 4)) >> 8;
  3152  003D  309E               	movlw	158
  3153  003E  0097               	movwf	23	;volatile
  3154                           
  3155                           ;main.c: 424: TMR1L = (65536 - (100000 / 4)) & 0xFF;
  3156  003F  3058               	movlw	88
  3157  0040  0096               	movwf	22	;volatile
  3158  0041                     i1l10892:	
  3159                           
  3160                           ;main.c: 425: }
  3161                           ;main.c: 426: if(TMR2IF)
  3162  0041  1C91               	btfss	17,1
  3163  0042  2851               	goto	i1l10904
  3164                           
  3165                           ;main.c: 427: {
  3166                           ;main.c: 428: TMR2IF = 0;
  3167  0043  1091               	bcf	17,1
  3168                           
  3169                           ;main.c: 429: if(PWMFlag == 1)
  3170  0044  1C79               	btfss	_PWMFlag/(0+8),_PWMFlag& (0+7)
  3171  0045  284E               	goto	i1l10902
  3172                           
  3173                           ;main.c: 430: {
  3174                           ;main.c: 431: PwmCount++;
  3175  0046  0AF7               	incf	_PwmCount,f
  3176                           
  3177                           ;main.c: 433: if(PwmCount >= DutyRatio)
  3178  0047  0876               	movf	_DutyRatio,w
  3179  0048  0277               	subwf	_PwmCount,w
  3180  0049  1C03               	skipc
  3181  004A  284D               	goto	i1l2366
  3182                           
  3183                           ;main.c: 434: (PORTA |= (1 << 0));
  3184  004B  140C               	bsf	12,0	;volatile
  3185  004C  284E               	goto	i1l10902
  3186  004D                     i1l2366:	
  3187                           
  3188                           ;main.c: 435: else
  3189                           ;main.c: 436: (PORTA &= ~(1 << 0));
  3190  004D  100C               	bcf	12,0	;volatile
  3191  004E                     i1l10902:	
  3192                           
  3193                           ;main.c: 437: }
  3194                           ;main.c: 438: handlerPWMInterrupt();
  3195  004E  3183  23F9  3180   	fcall	_handlerPWMInterrupt
  3196  0051                     i1l10904:	
  3197                           
  3198                           ;main.c: 439: }
  3199                           ;main.c: 440: if(TMR4IF)
  3200  0051  1C93               	btfss	19,1
  3201  0052  2856               	goto	i1l10910
  3202                           
  3203                           ;main.c: 441: {
  3204                           ;main.c: 442: TMR4IF = 0;
  3205  0053  1093               	bcf	19,1
  3206                           
  3207                           ;main.c: 443: RE2 = ~RE2;
  3208  0054  3004               	movlw	4
  3209  0055  0690               	xorwf	16,f
  3210  0056                     i1l10910:	
  3211                           
  3212                           ;main.c: 444: }
  3213                           ;main.c: 445: if(TMR6IF)
  3214  0056  1993               	btfsc	19,3
  3215                           
  3216                           ;main.c: 446: {
  3217                           ;main.c: 447: TMR6IF = 0;
  3218  0057  1193               	bcf	19,3
  3219  0058  0009               	retfie
  3220  0059                     __end_of_ISR_Timer:	
  3221                           
  3222                           	psect	text665
  3223  03F9                     __ptext665:	
  3224 ;; =============== function _ISR_Timer ends ============
  3225                           
  3226                           
  3227 ;; *************** function _handlerPWMInterrupt *****************
  3228 ;; Defined at:
  3229 ;;		line 296 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\main.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;		None               void
  3236 ;; Registers used:
  3237 ;;		wreg, status,2, status,0, pclath, cstack
  3238 ;; Tracked objects:
  3239 ;;		On entry : 1F/0
  3240 ;;		On exit  : 1F/0
  3241 ;;		Unchanged: FFE00/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3243 ;;      Params:         0       0       0       0
  3244 ;;      Locals:         0       0       0       0
  3245 ;;      Temps:          0       0       0       0
  3246 ;;      Totals:         0       0       0       0
  3247 ;;Total ram usage:        0 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    2
  3250 ;; This function calls:
  3251 ;;		_openOrClosePWM
  3252 ;; This function is called by:
  3253 ;;		_ISR_Timer
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256  03F9                     _handlerPWMInterrupt:	
  3257                           
  3258                           ;main.c: 297: if(PWM_CONTROL_FLAG == 0){
  3259                           
  3260                           ; Regs used in _handlerPWMInterrupt: [wreg+status,2+status,0+pclath+cstack]
  3261  03F9  08ED               	movf	_PWM_CONTROL_FLAG,f
  3262  03FA  1D03               	skipz
  3263  03FB  0008               	return
  3264                           
  3265                           ;main.c: 298: openOrClosePWM(0);
  3266  03FC  3000               	movlw	0
  3267  03FD  2BFE               	ljmp	_openOrClosePWM
  3268  03FE                     __end_of_handlerPWMInterrupt:	
  3269  03FE                     __ptext666:	
  3270 ;; =============== function _handlerPWMInterrupt ends ============
  3271                           
  3272                           
  3273 ;; *************** function _openOrClosePWM *****************
  3274 ;; Defined at:
  3275 ;;		line 291 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\main.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  open            1    wreg     unsigned char 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  open            1    1[COMMON] unsigned char 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;		None               void
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, status,0, pclath, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 1F/0
  3286 ;;		On exit  : 1F/0
  3287 ;;		Unchanged: FFE00/0
  3288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3289 ;;      Params:         0       0       0       0
  3290 ;;      Locals:         1       0       0       0
  3291 ;;      Temps:          0       0       0       0
  3292 ;;      Totals:         1       0       0       0
  3293 ;;Total ram usage:        1 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    1
  3296 ;; This function calls:
  3297 ;;		_setPWM
  3298 ;; This function is called by:
  3299 ;;		_handlerPWMInterrupt
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302  03FE                     _openOrClosePWM:	
  3303                           
  3304                           ; Regs used in _openOrClosePWM: [wreg+status,2+status,0+pclath+cstack]
  3305                           ;openOrClosePWM@open stored from wreg
  3306  03FE  00F1               	movwf	openOrClosePWM@open
  3307                           
  3308                           ;main.c: 292: PWM_CONTROL_FLAG = open;
  3309  03FF  00ED               	movwf	_PWM_CONTROL_FLAG
  3310                           
  3311                           ;main.c: 293: TMR2IE = open;
  3312  0400  1C71               	btfss	openOrClosePWM@open,0
  3313  0401  2C05               	goto	u66_20
  3314  0402  0021               	movlb	1	; select bank1
  3315  0403  1491               	bsf	17,1
  3316  0404  2C07               	goto	i1l10842
  3317  0405                     u66_20:	
  3318  0405  0021               	movlb	1	; select bank1
  3319  0406  1091               	bcf	17,1
  3320  0407                     i1l10842:	
  3321                           
  3322                           ;main.c: 294: setPWM(open);
  3323  0407  0871               	movf	openOrClosePWM@open,w
  3324  0408  2C09               	ljmp	_setPWM
  3325  0409                     __end_of_openOrClosePWM:	
  3326  0409                     __ptext667:	
  3327 ;; =============== function _openOrClosePWM ends ============
  3328                           
  3329                           
  3330 ;; *************** function _setPWM *****************
  3331 ;; Defined at:
  3332 ;;		line 283 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\main.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  open            1    wreg     unsigned char 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  open            1    0[COMMON] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;		None               void
  3339 ;; Registers used:
  3340 ;;		wreg
  3341 ;; Tracked objects:
  3342 ;;		On entry : 1F/1
  3343 ;;		On exit  : 1F/0
  3344 ;;		Unchanged: FFFE0/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3346 ;;      Params:         0       0       0       0
  3347 ;;      Locals:         1       0       0       0
  3348 ;;      Temps:          0       0       0       0
  3349 ;;      Totals:         1       0       0       0
  3350 ;;Total ram usage:        1 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; This function calls:
  3353 ;;		Nothing
  3354 ;; This function is called by:
  3355 ;;		_openOrClosePWM
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358  0409                     _setPWM:	
  3359                           
  3360                           ; Regs used in _setPWM: [wreg]
  3361                           ;setPWM@open stored from wreg
  3362  0409  00F0               	movwf	setPWM@open
  3363                           
  3364                           ;main.c: 284: if(open == 1){
  3365  040A  0B70               	decfsz	setPWM@open,w
  3366  040B  2C0F               	goto	i1l2322
  3367                           
  3368                           ;main.c: 285: (PORTA &= ~(1 << 0));
  3369  040C  0020               	movlb	0	; select bank0
  3370  040D  100C               	bcf	12,0	;volatile
  3371                           
  3372                           ;main.c: 286: }else{
  3373  040E  0008               	return
  3374  040F                     i1l2322:	
  3375                           
  3376                           ;main.c: 287: (PORTA |= (1 << 0));
  3377  040F  0020               	movlb	0	; select bank0
  3378  0410  140C               	bsf	12,0	;volatile
  3379  0411  0008               	return
  3380  0412                     __end_of_setPWM:	
  3381                           
  3382                           	psect	text668
  3383  03DC                     __ptext668:	
  3384 ;; =============== function _setPWM ends ============
  3385                           
  3386                           
  3387 ;; *************** function _handlerKeyEventInput *****************
  3388 ;; Defined at:
  3389 ;;		line 40 in file "C:\CTK\CTK80A 150928\CTK80A_Jas\main.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  keyCode         2    0[COMMON] int 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;		None               void
  3396 ;; Registers used:
  3397 ;;		wreg
  3398 ;; Tracked objects:
  3399 ;;		On entry : 1F/0
  3400 ;;		On exit  : 1F/0
  3401 ;;		Unchanged: FFFE0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3403 ;;      Params:         2       0       0       0
  3404 ;;      Locals:         0       0       0       0
  3405 ;;      Temps:          2       0       0       0
  3406 ;;      Totals:         4       0       0       0
  3407 ;;Total ram usage:        4 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_ISR_Timer
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415  03DC                     _handlerKeyEventInput:	
  3416                           
  3417                           ;main.c: 42: if(keyCode == 2 || keyCode == 3 || keyCode == 4){
  3418                           
  3419                           ; Regs used in _handlerKeyEventInput: [wreg]
  3420  03DC  0870               	movf	handlerKeyEventInput@keyCode,w
  3421  03DD  3A02               	xorlw	2
  3422  03DE  0471               	iorwf	handlerKeyEventInput@keyCode+1,w
  3423  03DF  1903               	skipnz
  3424  03E0  2BEB               	goto	i1l10832
  3425  03E1  0870               	movf	handlerKeyEventInput@keyCode,w
  3426  03E2  3A03               	xorlw	3
  3427  03E3  0471               	iorwf	handlerKeyEventInput@keyCode+1,w
  3428  03E4  1903               	skipnz
  3429  03E5  2BEB               	goto	i1l10832
  3430  03E6  0870               	movf	handlerKeyEventInput@keyCode,w
  3431  03E7  3A04               	xorlw	4
  3432  03E8  0471               	iorwf	handlerKeyEventInput@keyCode+1,w
  3433  03E9  1D03               	skipz
  3434  03EA  0008               	return
  3435  03EB                     i1l10832:	
  3436                           
  3437                           ;main.c: 43: if(KeyEvent_PendKeyCode != keyCode){
  3438  03EB  0850               	movf	_KeyEvent_PendKeyCode,w
  3439  03EC  00F2               	movwf	??_handlerKeyEventInput
  3440  03ED  01F3               	clrf	??_handlerKeyEventInput+1
  3441  03EE  0871               	movf	handlerKeyEventInput@keyCode+1,w
  3442  03EF  0673               	xorwf	??_handlerKeyEventInput+1,w
  3443  03F0  1D03               	skipz
  3444  03F1  2BF4               	goto	u64_25
  3445  03F2  0870               	movf	handlerKeyEventInput@keyCode,w
  3446  03F3  0672               	xorwf	??_handlerKeyEventInput,w
  3447  03F4                     u64_25:	
  3448  03F4  1903               	skipnz
  3449  03F5  0008               	return
  3450                           
  3451                           ;main.c: 45: KeyEvent_KeyTime = OS_Time;
  3452  03F6  0870               	movf	handlerKeyEventInput@keyCode,w
  3453  03F7  00D0               	movwf	_KeyEvent_PendKeyCode
  3454  03F8  0008               	return
  3455  03F9                     __end_of_handlerKeyEventInput:	
  3456                           
  3457                           	psect	text669
  3458  0000                     __ptext669:	
  3459 ;; =============== function _handlerKeyEventInput ends ============
  3460                           
  3461  007E                     btemp	set	126	;btemp
  3462  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Wed Nov 11 22:02:23 2015

       __size_of_ReadOrWriteEE 0049                             _RD 0CA8                             _WR 0CA9  
                   ReadEE@addr 0074                            _GIE 005F                            _RC1 0071  
                          _RB3 006B                            _RC2 0072                            _RB4 006C  
                          _RC3 0073                            _RB5 006D                            _RE2 0082  
                          _PR2 001B                            _PR4 0416                            wreg 0009  
  __end_of_LoadParamFromEPPROM 0134                   ___ftdiv@cntr 0041                   ___ftdiv@sign 0046  
                         l4400 0000                           l4403 0000                           l4389 0000  
                         l6620 0000                           l6605 0000                           l6608 0000  
                         l6617 0000                           l9210 028B                           l9237 0249  
                         l9343 0000                           l8760 0000                           l8754 01FF  
                         l8763 01B8                           l8772 0000                           l8757 0210  
                         l8766 01C0                           l8769 0000                           _CFGS 0CAE  
                         STR_1 0625                           STR_2 0640                           STR_3 064C  
                         STR_4 0617                           STR_5 05C1                           STR_6 05D4  
                         STR_7 05AE                           STR_8 0529                           STR_9 0575  
                         u1215 00AD                           _LATC 010E                           u1360 0000  
                         u1365 0225                           u1455 02AB                           u1535 018F  
                         u1565 017A                           _PEIE 005E                           _WREN 0CAA  
                         _main 0093     __size_of_system_state_init 0046                   ___ftpack@arg 0020  
                 ___ftpack@exp 0023                           fsr0h 0005                           fsr1h 0007  
                         fsr0l 0004                           fsr1l 0006                           btemp 007E  
                         start 0059                   ___ftmul@cntr 0045                   ___ftmul@sign 0046  
                 ___fttol@exp1 0034                   ___fttol@lval 0030                          l11300 0000  
                        l11302 0000                          l11320 02EE                          l11312 02D7  
                        l11304 0000                          l11400 0000                          l11330 0000  
                        l11322 02F2                          l11314 02DB                          l11306 0000  
                        l11402 0000                          l11410 0000                          l11252 0000  
                        l11316 02E0                          l11308 02D3                          l11340 0000  
                        l11332 0000                          l11404 0000                          l11412 0000  
                        l11420 0000                          l11500 0000                          l11270 0000  
                        l11326 0000                          l11318 02E9                          l11342 0000  
                        l11334 021D                          l11406 0000                          l11414 0000  
                        l11510 034F                          l11502 0000                          l11256 00F8  
                        l11280 0000                          l11328 0000                          l11352 023E  
                        l11344 0000                          l11336 0222                          l11408 0000  
                        l11416 0000                          l11440 0000                          l11432 0000  
                        l11512 0000                          l11504 0000                          l11520 0000  
                        l11258 00FC                          l11282 0000                          l11290 0000  
                        l11362 0252                          l11354 0000                          l11346 0000  
                        l11338 0000                          l11370 0000                          l11418 0000  
                        l11450 029E                          l11442 0000                          l11434 0000  
                        l11426 027A                          l11514 0000                          l11506 034A  
                        l11530 0000                          l11284 0000                          l11276 0000  
                        l11292 0000                          l11364 0000                          l11356 0245  
                        l11380 0000                          l11372 0000                          l11460 0000  
                        l11444 0000                          l11436 0000                          l11516 0000  
                        l11524 0000                          l11532 0000                          l11540 0000  
                        l11294 0000                          l11366 0260                          l11390 0000  
                        l11382 0000                          l11374 0000                          l11454 0000  
                        l11446 0000                          l11438 0000                          l11470 0316  
                        l11526 0000                          l11534 0000                          l11550 0149  
                        l11542 0134                          l11296 0000                          l11392 0000  
                        l11384 0000                          l11376 0000                          l11456 02B4  
                        l11448 0000                          l11480 0000                          l11464 0000  
                        l11528 0000                          l11560 015F                          l11544 0000  
                        l11298 0000                          l11394 0000                          l11386 0000  
                        l11378 0000                          l11458 0000                          l11490 0000  
                        l11482 0000                          l11538 0000                          l11562 016D  
                        l11570 0000                          l11396 0000                          l11388 0000  
                        l11492 0000                          l11484 0000                          l11476 0327  
                        l11564 0000                          l11556 014D                          l11548 0142  
                        l11580 0000                          l11572 0000                          l11398 0000  
                        l11494 033B                          l11486 0000                          l11478 0000  
                        l11566 0000                          l11574 0000                          l11488 0000  
                        l11576 0000                          l11568 0000                          l11498 0340  
                        l11578 009D           __end_of_API_LCD_INIT 011F                          ?_main 0070  
                        STR_10 053C                          STR_11 0562                          STR_12 059B  
                        STR_13 054F                          STR_14 0588                          STR_15 05E7  
                        STR_16 05F7                          STR_17 0633                          STR_18 0607  
              __end_of___ftdiv 02CB                          _EEPGD 0CAF                __end_of_WriteEE 0214  
              __end_of___ftmul 0369                          _T1CON 0018                __end_of___fttol 0269  
                        _T2CON 001C                          _T4CON 0417                          _IOCBN 0395  
                        _IOCBP 0394                  ?_CTKSoftDelay 0074                          _TMR1H 0017  
                        _TMR1L 0016                          _PORTA 000C                          _PORTB 000D  
                        _PORTD 000F                          _PORTE 0010                          u64_25 03F4  
                        _TRISA 008C                          _TRISB 008D                          _TRISC 008E  
                        _TRISD 008F                          _TRISE 0090                          u66_20 0405  
           __size_of_ISR_Timer 0055                  _ReadOrWriteEE 0134                  ___ftpack@sign 0024  
                  _Battery_12V 0051                    _Battery_24V 00A0                 __pbitbssCOMMON 03C8  
                        status 0003                          wtemp0 007E     __size_of_lcd_write_command 000C  
          _PWM_CONTROL_TIMEOUT 0067                   __end_of_main 00A3                 _openOrClosePWM 03FE  
               ??_CTKSoftDelay 0076                         ??_main 0076                  ___fttol@sign1 002F  
                ?_readIntParam 0047          __end_of_API_LCD_CLEAR 0131                 ?_ReadOrWriteEE 004E  
                       _EEADRL 0191                         _EEDATL 0193                         _EECON2 0196  
                       _ANSELA 018C                         _ANSELB 018D                         _ANSELE 0190  
             __end_of___ftpack 0305                         _IOCBF3 1CB3                         _IOCBF4 1CB4  
                       _IOCBF5 1CB5                         i1l2322 040F                         i1l2327 0000  
                       i1l2366 004D               __end_of___lwtoft 01FE                         _OSCCON 0099  
                       _TMR0IE 005D                         _TMR1IE 0488                         _TMR1IF 0088  
                       _TMR2IE 0489                         _TMR2IF 0089                         _TMR4IE 0499  
                       _TMR4IF 0099                         _TMR6IF 009B                         _WDTCON 0097  
             readIntParam@addr 004D                         _ReadEE 01B7              __end_of_ISR_Timer 0059  
       __end_of_openOrClosePWM 0409                      ??___ftdiv 003E                      ??_WriteEE 0075  
                    ??___ftmul 003E                      ??___fttol 002C                         _setPWM 0409  
               ??_readIntParam 0049    __end_of_handlerPWMInterrupt 03FE          ___ftmul@f3_as_product 0042  
                 __pdataBIGRAM 2098         __size_of_writeIntParam 002A                     ___ftdiv@f1 003B  
                   ___ftdiv@f2 0038                     ___ftdiv@f3 0042                     ___ftmul@f1 0038  
                   ___ftmul@f2 003B                     ___fttol@f1 0028                 __pcstackCOMMON 0070  
        __size_of_API_LCD_INIT 000F                   __pidataBANK0 0412                   __pidataBANK1 0429  
              ?_openOrClosePWM 0070                     ___lwtoft@c 0035                    _ParamConfig 2098  
 __end_of_handlerKeyEventInput 03F9                ??_ReadOrWriteEE 0076                     __pbssBANK0 0067  
                 _API_LCD_INIT 0110           __end_of_CTKSoftDelay 0110                        ?_ReadEE 0070  
                   __pmaintext 0093         tranform_OS_State@state 0074                     __pintentry 0004  
       ReadOrWriteEE@startAddr 00B6             openOrClosePWM@open 0071                        ?_setPWM 0070  
                _writeIntParam 01C4                      ?___ftpack 0020                      ?___lwtoft 0035  
                      i1l10910 0056                        i1l10902 004E                        i1l10832 03EB  
                      i1l10840 0000                        i1l10904 0051                        i1l10826 0000  
                      i1l10842 0407                        i1l10836 0000                        i1l10844 0000  
                      i1l10908 0000                        i1l10838 0000                        i1l10870 0000  
                      i1l10854 0000                        i1l10864 0017                        i1l10890 0000  
                      i1l10858 0000                        i1l10866 0019                        i1l10892 0041  
                      i1l10884 0037                        i1l10876 002A                        i1l10886 0039  
                      i1l10878 002C                        i1l10898 0000                        _PWMFlag 03C8  
                   __stringtab 0500   __size_of_LoadParamFromEPPROM 0003              readIntParam@value 004B  
         __end_of_readIntParam 01B7                __size_of_ReadEE 000D                        ___ftdiv 0269  
                      _WriteEE 01FE                        ___ftmul 0305                        ___fttol 0214  
               ?_writeIntParam 0047                     ??___ftpack 0025                __size_of_setPWM 0009  
                   ??___lwtoft 0074                        _dpowers 0501           end_of_initialization 0091  
                      init_ram 043F                        initloop 0440           _handlerKeyEventInput 03DC  
                    _ISR_Timer 0004                   __pstringtext 0500              writeIntParam@addr 0049  
            writeIntParam@data 004A    handlerKeyEventInput@keyCode 0070       lcd_write_command@command 0024  
                CTKSoftDelay@a 0020                  CTKSoftDelay@b 0022                  CTKSoftDelay@x 0074  
        __size_of_CTKSoftDelay 0018                    ___ftdiv@exp 0045          ?_handlerKeyEventInput 0070  
             ??_openOrClosePWM 0071                    ___ftmul@exp 0041                 __end_of_ReadEE 01C4  
              ??_writeIntParam 0076         __size_of_API_LCD_CLEAR 0006                     ?_ISR_Timer 0070  
                __pidataBIGRAM 0384                 __end_of_setPWM 0412                   _CTKSoftDelay 00F8  
          start_initialization 005C   __size_of_handlerPWMInterrupt 0005                      _DutyRatio 0076  
        __size_of_readIntParam 003A                       ??_ReadEE 0074                    __pdataBANK0 0050  
                  __pdataBANK1 00A0                       ??_setPWM 0070            _LoadParamFromEPPROM 0131  
                  WriteEE@addr 0074                    WriteEE@data 0075              __size_of___ftpack 003A  
                 _readIntParam 017D                    __pbssCOMMON 0076              __size_of___lwtoft 0010  
                __pcstackBANK0 0020                  __pcstackBANK1 00B6          __end_of_ReadOrWriteEE 017D  
                _API_LCD_CLEAR 012B               _PWM_CONTROL_FLAG 006D                     setPWM@open 0070  
         ?_LoadParamFromEPPROM 0070         ??_handlerKeyEventInput 0072           _KeyEvent_PendKeyCode 0050  
              _OS_CurrentState 006C                      __ptext650 017D                      __ptext651 012B  
                    __ptext660 01FE                      __ptext652 0110                      __ptext661 01B7  
                    __ptext653 01EE                      __ptext662 00F8                      __ptext654 0305  
                    __ptext663 00A3                      __ptext655 0269                      __ptext647 0131  
                    __ptext656 011F                      __ptext648 0134                      __ptext665 03F9  
                    __ptext657 00B2                      __ptext649 01C4                      __ptext666 03FE  
                    __ptext658 0214                      __ptext667 0409                      __ptext659 02CB  
                    __ptext668 03DC                      __ptext669 0000                       ?___ftdiv 0038  
                     ?_WriteEE 0074                    ??_ISR_Timer 0074                       ?___ftmul 0038  
                     ?___fttol 0028                      _lcd_state 0078                 ?_API_LCD_CLEAR 0070  
            _tranform_OS_State 00A3             ?_tranform_OS_State 0074          ??_LoadParamFromEPPROM 0076  
          ??_tranform_OS_State 0020              ReadOrWriteEE@read 004E      __end_of_tranform_OS_State 00B2  
                     _PwmCount 0077            _handlerPWMInterrupt 03F9               __size_of___ftdiv 0062  
             __size_of_WriteEE 0016               __size_of___ftmul 0064               __size_of___fttol 0055  
                     ___ftpack 02CB                       ___lwtoft 01EE                ??_API_LCD_CLEAR 0076  
         ?_handlerPWMInterrupt 0070                  ?_API_LCD_INIT 0070                  __size_of_main 0010  
            _system_state_init 00B2             ?_system_state_init 0070          __end_of_writeIntParam 01EE  
          ??_system_state_init 0076     __size_of_tranform_OS_State 000F          ??_handlerPWMInterrupt 0072  
              _HW_BATTERY_TYPE 006B                       intlevel1 0000                 ??_API_LCD_INIT 0076  
    __end_of_system_state_init 00F8              _lcd_write_command 011F        __size_of_openOrClosePWM 000B  
           ?_lcd_write_command 0070             writeIntParam@value 0047            ??_lcd_write_command 0076  
               ReadOrWriteEE@i 00B7  __size_of_handlerKeyEventInput 001D      __end_of_lcd_write_command 012B  
